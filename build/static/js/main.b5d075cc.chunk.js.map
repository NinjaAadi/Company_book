{"version":3,"sources":["Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPComp.module.css","Components/Company/EditCompany/EditCompany.module.css","Components/Company/Groupsearch/Groupsearch.module.css","Components/Company/CompanyForm/Companyform.module.css","Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPersonList/Showpersonlist.module.css","Components/EditPop/EditPop.module.css","Components/Field/Field.module.css","Components/Groups/Group.module.css","Components/Module/Module.module.css","Components/Company/Showcompany.module.css","Actiontype.js","Reducers/Field.js","Reducers/Group.js","Reducers/Modules.js","Reducers/AllCompany.js","Reducers/RootReducer.js","Store.js","host.js","Utils/LoginUser.js","Utils/EncryptDecrypt.js","Components/Home/Login/Login.js","Utils/SignUpUser.js","Components/Home/SignUp/SignUp.js","Components/Home/Home.js","Components/DeletePop/DeletePopup.js","Components/EditPop/EditPopField.js","auth.js","Actions/Getfields.js","Utils/CreateField.js","Utils/DeleteField.js","Utils/EditField.js","Components/Spinner/spinner.gif","Components/Spinner/Spinner.js","Components/Field/Field.js","Components/EditPop/EditPopGroup.js","Actions/Getgroups.js","Utils/CreateGroup.js","Utils/DeleteGroup.js","Utils/EditGroup.js","Components/Groups/Groups.js","Components/EditPop/EditPopModule.js","Actions/GetAllModules.js","Utils/CreateModule.js","Utils/DeleteModule.js","Utils/EditModule.js","Components/Module/Module.js","Actions/Company/Getallcompanies.js","Actions/Company/GetFirstnameComp.js","Actions/Company/GetAllComp.js","Components/Company/ShowAllCompanies/Showallcompany.js","Components/Company/ShowCompany.js","Utils/Createperson.js","Utils/DeleteCompany.js","Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPComp.js","Utils/CreateCompany.js","Components/Company/CompanyForm/CompanyForm.js","Utils/EditCompany.js","Components/Company/EditCompany/EditCompany.js","Utils/Getallperson.js","Utils/Deleteperson.js","Utils/Editperson.js","Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPersonList/Personedit/Personedit.js","Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPersonList/Showpersonlist.js","Utils/Getgroupedcompanies.js","Components/Company/Groupsearch/Groupsearch.js","dbpass.js","Components/Backup/Backup.js","Components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js","Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPersonList/Personedit/Personedit.module.css","Components/Backup/Backup.module.css","Components/Home/Login/Login.module.css","Components/Home/SignUp/Signup.module.css","Components/Home/Home.module.css","Components/DeletePop/DeletePopup.module.css","Components/Company/ShowAllCompanies/Company.module.css","Components/Navbar/Navbar.module.css"],"names":["module","exports","SET_FIELDS","SET_GROUPS","SET_MODULES","GET_ALL_COMPANIES","SEARCH_FIRST_COMP","SEARCH_ALL_COMP","CLEAR_COMP","initialstate","c_fields","isfetched","fieldreducer","state","action","type","data","c_groups","groupreducer","c_modules","modulereducer","companies","querycompanies","companyreducer","all","map","c","push","combineReducers","Field","Group","Module","All_Companies","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootreducer","host","LoginUser","require","email","password","a","length","config","headers","axios","post","localStorage","setItem","console","log","Login","history","useHistory","useState","setEmail","setPassword","loginMessage","setLoginMessage","login","e","preventDefault","className","classes","innerLogin","placeholder","value","onChange","target","id","icon","faEye","onClick","x","document","getElementById","PasswordVisibility","LoginButton","SignUpUser","name","adminpass","res","user","SignUp","setName","adminPassword","setAdminPassword","signUpMessage","setSignUpMessage","signUp","validator","isEmail","setTimeout","signup","innerSignup","signupMessage","SignupButton","Home","getItem","undefined","home","heading","welmsg","forms","DeletePopup","props","exefunc","mainfunc","p_value","toggler","onsuccess","reroute","style","color","class","connect","fields","execfunc","oldname","newname","setname","msg","setmsg","onSubmit","isvalid","f","NAME","setInterval","onchange","getfields","dispatch","removeItem","JSON","stringify","rows","createfield","split","join","field_name","field_original","deletefield","editfield","old_name","new_name","Spinner","src","spinner","width","margin","marginTop","display","backgroundColor","alt","fname","setfname","message","setmessage","settoggler","toggler2","settoggler2","setnamedelete","name2","setnamedelete2","setnametodelete","setnametoedit2","fieldname","authemail","authpass","create_field","fetchfield","useEffect","i","ISORIGINAL","ID","propType","PropTypes","func","isRequired","object","G_NAME","getgroups","groups","creategroup","g_name","deletegroup","g_id","editgroup","gname","setgname","setid","setnametoedit","setidtodelete","groupname","create_group","fetchgroups","G_ID","modules","M_NAME","getmodules","createmodule","m_name","deletemodule","m_id","editmodule","setmmane","create_module","fetchmodules","M_ID","getallcompanies","c_data","getfirstnamecomp","search_name","endpoint","q_string","comp_first","q_array","c_id","j","C_ID","getallcomp","comp_all","withRouter","company","parse","output","padding","to","pathname","cursor","ShowCompany","c1","c2","first","setcolor","querystr","setstr","str","showall","toggle","getallcompp","trim","query","border","marginLeft","createperson","obj","deletecompany","ShowPComp","location","comp","EMAIL","MOBILE","DESIGNATION","setres","errmsg","seterrmsg","setpersonfield","createper","fetchall","allgroups","allmodules","c_g","C_G_ID","c_m","C_M_ID","msg2","clr","comp_arr","Object","entries","comp_obj","Array","key","temp","Date","toString","substr","C_NAME","textAlign","item","createcompany","CompanyForm","err","seterr","country","setcountry","options","useMemo","countryList","getData","date","setdate","dd","now","currd","setvalue","value2","setvalue2","create","flag","allcomp","rres","g_options","m_options","g","label","m","fontSize","selected","setdatemy","scrollableMonthYearDropdown","showYearDropdown","val","it","editcompany","commp","EditCompany","prevobj","setprevobj","comparr","newobj","keyy","nd","isgroupedchanged","def_g","def_m","ismodulechanged","prev_g","prev_m","marginRight","getperson","deleteperson","p_id","editperson","Personedit","person","Showpersonlist","setperson","getallperson","persons","setobj","setobjedit","p_fields","getgroupedcompanies","g_string","Groupsearch","setfields","setoption","showfield","setshowfield","setval","setcompanies","onsubmit","ff","arr","ress","allcompanies","showcomp","cid","setgroupquery","option","ans","select","table","filename","sheet","buttonText","ret","dbpass","Backup","pass","setpass","onsubmit2","Navbar","toggleOn","title","navLinks","navLinksActive","App","Store","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b5d075cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"ShowPComp_body__oq1fl\",\"head\":\"ShowPComp_head__3YeJ7\",\"module\":\"ShowPComp_module__3k2sT\",\"flex\":\"ShowPComp_flex__2xo1E\",\"p\":\"ShowPComp_p__15vXW\",\"table\":\"ShowPComp_table__Kgl5S\",\"th\":\"ShowPComp_th__2x4HV\",\"th-1\":\"ShowPComp_th-1__1m9SI\",\"tr\":\"ShowPComp_tr__Hxlx5\",\"td\":\"ShowPComp_td__1jFLL\",\"td-1\":\"ShowPComp_td-1__FIKhz\",\"deledit\":\"ShowPComp_deledit__q8n1C\",\"delete\":\"ShowPComp_delete__28V5r\",\"edit\":\"ShowPComp_edit__NSjXP\",\"buttons\":\"ShowPComp_buttons__1dDCo\",\"btn\":\"ShowPComp_btn__3pouG\",\"form\":\"ShowPComp_form__14Yf6\",\"input\":\"ShowPComp_input__2I7F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"EditCompany_body__1nfVt\",\"p\":\"EditCompany_p__2EeeT\",\"input\":\"EditCompany_input__2yLxq\",\"submit\":\"EditCompany_submit__3x0Wt\",\"input-1\":\"EditCompany_input-1__2ZVhM\",\"sel\":\"EditCompany_sel__2D1JI\",\"date\":\"EditCompany_date__3nnPF\",\"country\":\"EditCompany_country__2LFic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Groupsearch_body__2LnCz\",\"flex\":\"Groupsearch_flex__6td7K\",\"label\":\"Groupsearch_label__2KX1D\",\"item\":\"Groupsearch_item__GxLDV\",\"head\":\"Groupsearch_head__3YtbY\",\"btn\":\"Groupsearch_btn__25Bl1\",\"btn-1\":\"Groupsearch_btn-1__3qgyo\",\"head-1\":\"Groupsearch_head-1__OZQNK\",\"table\":\"Groupsearch_table__3aPSs\",\"tr-1\":\"Groupsearch_tr-1__1tW24\",\"td\":\"Groupsearch_td__1sNL0\",\"th\":\"Groupsearch_th__1NWZf\",\"center\":\"Groupsearch_center__3CkyT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Companyform_body__3WJ4s\",\"p\":\"Companyform_p__sFokH\",\"input\":\"Companyform_input__3zgW_\",\"submit\":\"Companyform_submit__1jnnb\",\"input-1\":\"Companyform_input-1__iVpTe\",\"sel\":\"Companyform_sel__171DL\",\"date\":\"Companyform_date__1_fe3\",\"country\":\"Companyform_country__ms9Q0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Showpersonlist_body__xhcnO\",\"h1\":\"Showpersonlist_h1__c39M3\",\"table\":\"Showpersonlist_table__XF0Qv\",\"th\":\"Showpersonlist_th__Erq3u\",\"td\":\"Showpersonlist_td__1cfdt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"EditPop_body__lmrqi\",\"form\":\"EditPop_form__3S-EE\",\"btn\":\"EditPop_btn__3Emb8\",\"btn-2\":\"EditPop_btn-2__Bcn1u\",\"input\":\"EditPop_input__3RnTi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Field_body__39Vhy\",\"h1\":\"Field_h1__2spCs\",\"table\":\"Field_table__33H8W\",\"th\":\"Field_th__ue7UH\",\"td\":\"Field_td__248Ly\",\"name\":\"Field_name__31SYp\",\"btn-1\":\"Field_btn-1__8viXA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Group_body__22RCZ\",\"h1\":\"Group_h1__3cfvc\",\"table\":\"Group_table__1U9P3\",\"th\":\"Group_th__3lILw\",\"td\":\"Group_td__15tcs\",\"name\":\"Group_name__3Nl9N\",\"btn-1\":\"Group_btn-1__9MWnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Module_body__BcUYS\",\"h1\":\"Module_h1__2KZbf\",\"table\":\"Module_table__3u1YT\",\"th\":\"Module_th__vQvD3\",\"td\":\"Module_td__15AHm\",\"name\":\"Module_name__1Rt4Z\",\"btn-1\":\"Module_btn-1__119Xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Showcompany_body__2JNpy\",\"h1\":\"Showcompany_h1__1JrXB\",\"search\":\"Showcompany_search__3jEj_\",\"input\":\"Showcompany_input__1S3sK\",\"search-2\":\"Showcompany_search-2__2RG_-\",\"occ\":\"Showcompany_occ__zFMgo\",\"search-3\":\"Showcompany_search-3__3xv0V\"};","export const SET_FIELDS = \"SET_FIELDS\";\nexport const SET_GROUPS = \"SET_GROUPS\";\nexport const SET_MODULES = \"SET_MODULES\";\nexport const GET_ALL_COMPANIES = \"GET_ALL_COMPANIES\";\nexport const SEARCH_FIRST_COMP = \"SEARCH_FIRST_COMP\";\nexport const SEARCH_ALL_COMP = \"SEARCH_ALL_COMP\";\nexport const CLEAR_COMP = \"CLEAR_COMP\";\n","import { SET_FIELDS } from \"../Actiontype\";\nconst initialstate = {\n  c_fields: \"\",\n  isfetched: false,\n};\n\nfunction fieldreducer(state = initialstate, action) {\n  const { type, data } = action;\n  switch (type) {\n    case SET_FIELDS: {\n      return {\n        c_fields: data,\n        isfetched: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\nexport default fieldreducer;\n","import { SET_GROUPS } from \"../Actiontype\";\nconst initialstate = {\n  c_groups: \"\",\n  isfetched: false,\n};\n\nfunction groupreducer(state = initialstate, action) {\n  const { type, data } = action;\n  switch (type) {\n    case SET_GROUPS: {\n      return {\n        c_groups: data,\n        isfetched: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\nexport default groupreducer;\n","import { SET_MODULES } from \"../Actiontype\";\nconst initialstate = {\n  c_modules: \"\",\n  isfetched: false,\n};\n\nfunction modulereducer(state = initialstate, action) {\n  const { type, data } = action;\n  switch (type) {\n    case SET_MODULES: {\n      return {\n        c_modules: data,\n        isfetched: true,\n      };\n    }\n    default:\n      return state;\n  }\n}\nexport default modulereducer;\n","import {\n  GET_ALL_COMPANIES,\n  SEARCH_FIRST_COMP,\n  SEARCH_ALL_COMP,\n  CLEAR_COMP,\n} from \"../Actiontype\";\nconst initialstate = {\n  companies: \"\",\n  querycompanies: [],\n  isfetched: false,\n};\n\nfunction companyreducer(state = initialstate, action) {\n  const { type, data } = action;\n  switch (type) {\n    case GET_ALL_COMPANIES: {\n      const all = [];\n      data.map((c) => {\n        all.push(c);\n      });\n      return {\n        companies: data,\n        querycompanies: all,\n        isfetched: true,\n      };\n    }\n    case SEARCH_FIRST_COMP: {\n      return {\n        ...state,\n        querycompanies: data,\n      };\n    }\n    case SEARCH_ALL_COMP: {\n      return {\n        ...state,\n        querycompanies: data,\n      };\n    }\n    case CLEAR_COMP: {\n      return {\n        ...state,\n        querycompanies: [],\n      };\n    }\n    default:\n      return state;\n  }\n}\nexport default companyreducer;\n","import { combineReducers } from \"redux\";\nimport Field from \"./Field\";\nimport Group from \"./Group\";\nimport Module from \"./Modules\";\nimport All_Companies from \"./AllCompany\";\nexport default combineReducers({\n  Field,\n  Group,\n  Module,\n  All_Companies,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootreducer from \"./Reducers/RootReducer\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\nconst store = createStore(rootreducer, initialState, enhancer);\n\nexport default store;\n","const host = \"http://localhost:5000\";\n\nexport default host;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { encrypt, decrypt } from \"../Utils/EncryptDecrypt\";\nconst LoginUser = async (email, password) => {\n  try {\n    if (email.length == 0 || password.length == 0) {\n      return false;\n    }\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const data = {\n      email,\n      password,\n    };\n\n    const endpoint = host + \"/api/v1/users/login\";\n    const res = await axios.post(endpoint, data, config);\n\n    localStorage.setItem(\"password\", password);\n    localStorage.setItem(\"email\", email);\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\n\nexport default LoginUser;\n","const Cryptr = require(\"cryptr\");\nconst cryptr = new Cryptr(\"myTotalySecretKey\");\n\nexport const encrypt = (s) => {\n  return cryptr.encrypt(s);\n};\nexport const decrypt = (s) => {\n  return cryptr.decrypt(s);\n};\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\nimport LoginUser from \"../../../Utils/LoginUser\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router\";\n\nconst Login = () => {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage, setLoginMessage] = useState(\"\");\n  const login = async (e) => {\n    e.preventDefault();\n    const res = await LoginUser(email, password, loginMessage);\n\n    if (res === true) {\n      localStorage.setItem(\"password\", password);\n      localStorage.setItem(\"email\", email);\n      history.push(\"/companies\");\n    } else {\n      setLoginMessage(\"INCORRECT USER NAME OR PASSWORD\");\n    }\n  };\n\n  const PasswordVisibility = (e) => {\n    e.preventDefault();\n    let x = document.getElementById(\"inputPass\");\n    if (x.type == \"password\") x.type = \"text\";\n    else x.type = \"password\";\n  };\n\n  return (\n    <>\n      <div className={classes.login}>\n        <div className={classes.innerLogin}>\n          <div className={classes.loginMessage}>{loginMessage}</div>\n          <input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setLoginMessage(\"\");\n            }}\n          />\n          <input\n            id=\"inputPass\"\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n              setLoginMessage(\"\");\n            }}\n          />\n          <FontAwesomeIcon\n            className={classes.icon}\n            icon={faEye}\n            onClick={(e) => {\n              PasswordVisibility(e);\n            }}\n          />\n          <button\n            className={classes.LoginButton}\n            onClick={(e) => {\n              login(e);\n            }}\n          >\n            LogIn\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\nimport host from \"../host\";\n\n\nconst SignUpUser = async (name, email, password, adminpass) => {\n  try {\n    if (\n      name.length == 0 ||\n      email.length == 0\n    ) {\n      return false;\n    }\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const data = {\n      name,\n      email,\n      password,\n      adminpass,\n    };\n    const endpoint = host + \"/api/v1/users/register\";\n\n    const res = await axios.post(endpoint, data, config);\n\n    localStorage.setItem(\"email\", res.data.user.email);\n    localStorage.setItem(\"password\", password);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default SignUpUser;\n","import React, { useState } from \"react\";\nimport classes from \"./Signup.module.css\";\nimport SignUpUser from \"../../../Utils/SignUpUser\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport validator from \"validator\";\nimport { useHistory } from \"react-router\";\nconst SignUp = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [adminPassword, setAdminPassword] = useState(\"\");\n  const [signUpMessage, setSignUpMessage] = useState(\"\");\n  const history = useHistory();\n  const signUp = async (e) => {\n    e.preventDefault();\n    const res = await SignUpUser(name, email, password, adminPassword);\n\n    if (res == true) {\n      localStorage.setItem(\"password\", password);\n      localStorage.setItem(\"email\", email);\n      history.push(\"/companies\");\n    } else {\n      if (!validator.isEmail(email)) {\n        setSignUpMessage(\"invalid email\");\n        setTimeout(() => {\n          setSignUpMessage(\"\");\n        }, 1500);\n      } else {\n        setSignUpMessage(\"Invalid admin password\");\n        setTimeout(() => {\n          setSignUpMessage(\"\");\n        }, 1500);\n      }\n    }\n  };\n\n  const PasswordVisibility = (e) => {\n    e.preventDefault();\n    let x = document.getElementById(\"signupPass\");\n    if (x.type == \"password\") x.type = \"text\";\n    else x.type = \"password\";\n  };\n\n  return (\n    <>\n      <div className={classes.signup}>\n        <div className={classes.innerSignup}>\n          <div className={classes.signupMessage}>{signUpMessage}</div>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value);\n              setSignUpMessage(\"\");\n            }}\n            placeholder=\"Name\"\n          />\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value);\n              setSignUpMessage(\"\");\n            }}\n            placeholder=\"Email\"\n          />\n          <input\n            id=\"signupPass\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => {\n              setPassword(e.target.value);\n              setSignUpMessage(\"\");\n            }}\n            placeholder=\"Password\"\n          />\n          <FontAwesomeIcon\n            className={classes.icon}\n            icon={faEye}\n            onClick={(e) => {\n              PasswordVisibility(e);\n            }}\n          />\n\n          <input\n            type=\"password\"\n            value={adminPassword}\n            onChange={(e) => setAdminPassword(e.target.value)}\n            placeholder=\"Admin Password\"\n          />\n          <button\n            className={classes.SignupButton}\n            onClick={(e) => {\n              signUp(e);\n            }}\n          >\n            SignUp\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SignUp;\n","import React from \"react\";\nimport Login from \"./Login/Login\";\nimport SignUp from \"./SignUp/SignUp\";\nimport classes from \"./Home.module.css\";\nimport { useHistory } from \"react-router-dom\";\nconst Home = () => {\n  const history = useHistory();\n  if (\n    localStorage.getItem(\"email\") != null ||\n    localStorage.getItem(\"email\") != undefined\n  ) {\n    history.push(\"/companies\");\n  }\n  return (\n    <div className={classes.home}>\n      <div className={classes.heading}>\n        <div className={classes.welmsg}>Welcome to Company Book</div>\n      </div>\n      <div className={classes.forms}>\n        <Login />\n        <SignUp />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport classes from \"./DeletePopup.module.css\";\n\nimport { useHistory } from \"react-router\";\nconst DeletePopup = (props) => {\n  const history = useHistory();\n  const exefunc = props.mainfunc;\n  const p_value = props.p_value;\n  const toggler = props.toggler;\n\n  //On fail just hide the toggler\n  const onfail = (e) => {\n    toggler();\n  };\n\n  //On success click run the executable function\n  const onsuccess = async (e) => {\n    e.preventDefault();\n    const res = await exefunc(p_value);\n    if (props.reroute) {\n      history.push(props.reroute);\n    }\n    toggler();\n  };\n  return (\n    <div className={classes[\"body\"]}>\n      <p style={{ color: \"red\" }}>Are you sure you want to delete?</p>\n      <div className={classes[\"btn-div\"]}>\n        <button className={classes[\"succ\"]} onClick={(e) => onsuccess(e)}>\n          <i class=\"fas fa-trash\"></i> Yes\n        </button>\n        <button className={classes[\"fail\"]} onClick={(e) => onfail(e)}>\n          <i class=\"fas fa-times-circle\"></i> No\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DeletePopup;\n","import React, { useState } from \"react\";\nimport classes from \"./EditPop.module.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst EditPop = (props) => {\n  const toggler = props.toggler;\n  const execfunc = props.mainfunc;\n  const oldname = props.oldname;\n  const [newname, setname] = useState(oldname);\n  const [msg, setmsg] = useState(\"\");\n  const name = newname;\n  const onchange = (e) => {\n    setname(e.target.value);\n  };\n\n  //Run the executable function\n  const onSubmit = async (e) => {\n    const fields = props.fields;\n    let isvalid = true;\n    fields.map((f) => {\n      if (f.NAME == newname) {\n        isvalid = false;\n      }\n    });\n    if (isvalid === false) {\n      setmsg(\"Name already exists!\");\n      return;\n    }\n    const res = await execfunc(oldname, newname);\n    if (res === false) {\n      setmsg(\"Please enter a valid name!\");\n      setInterval(() => {\n        setmsg(\"\");\n      }, 2000);\n    } else {\n      toggler();\n    }\n  };\n  return (\n    <div className={classes[\"body\"]}>\n      <div className={classes[\"form\"]}>\n        <p>Enter New Name : </p>\n        <input\n          value={name}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"New Name\"\n        />\n        <button onClick={(e) => onSubmit(e)} className={classes[\"btn\"]}>\n          <i class=\"fas fa-pen\"></i> Update\n        </button>\n        <button onClick={(e) => toggler(e)} className={classes[\"btn-2\"]}>\n          <i class=\"fas fa-times-circle\"></i>\n        </button>\n        <p style={{ color: \"red\" }}>{msg}</p>\n      </div>\n    </div>\n  );\n};\nEditPop.propTypes = {\n  fields: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  fields: state.Field.c_fields,\n});\nexport default connect(mapStateToProps, {})(EditPop);\n","export const email = localStorage.getItem(\"email\");\nexport const password = localStorage.getItem(\"password\");\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\n//import actions\nimport { SET_FIELDS } from \"../Actiontype\";\n\n//Function to fetch all the fields from the server\nexport const getfields = () => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const data = {\n    email: email || localStorage.getItem(\"email\"),\n    password: password || localStorage.getItem(\"password\"),\n  };\n  //Endpoint\n  const endpoint = host + \"/api/v1/field/getallfields\";\n\n  const fields = await axios.post(endpoint, data, config);\n  localStorage.removeItem(\"allfields\");\n  localStorage.setItem(\"allfields\", JSON.stringify(fields.data.rows));\n  //Dispatch the data into the store\n  dispatch({\n    type: SET_FIELDS,\n    data: fields.data.rows,\n  });\n};\n","import axios from \"axios\";\nimport { email, password } from \"../auth\";\nimport host from \"../host\";\nconst createfield = async (name) => {\n  name = name.split(\" \").join(\"\");\n  try {\n    if (name.length == 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/field/createfield\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      field_name: name,\n      field_original: 0,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default createfield;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst deletefield = async (name) => {\n  name = name.split(\" \").join(\"\");\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/field/deletefield\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      field_name: name,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default deletefield;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst editfield = async (old_name, new_name) => {\n  new_name = new_name.split(\" \").join(\"\");\n  try {\n    if (new_name.length === 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/field/editfield\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      old_name,\n      new_name,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default editfield;\n","export default __webpack_public_path__ + \"static/media/spinner.578fad3a.gif\";","import React from \"react\";\nimport spinner from \"./spinner.gif\";\nconst Spinner = () => {\n  return (\n    <div>\n      <img\n        src={spinner}\n        style={{\n          width: \"100\",\n          margin: \"auto\",\n          marginTop: \"200px\",\n          display: \"block\",\n          backgroundColor: \"white\",\n        }}\n        alt=\"Loading...\"\n      />\n    </div>\n  );\n};\nexport default Spinner;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./Field.module.css\";\nimport DeletePopup from \"../DeletePop/DeletePopup\";\nimport EditPopup from \"../EditPop/EditPopField\";\n//Import action files\nimport { getfields } from \"../../Actions/Getfields\";\nimport createfield from \"../../Utils/CreateField\";\nimport deletefield from \"../../Utils/DeleteField\";\nimport editfield from \"../../Utils/EditField\";\nimport Spinner from \"../Spinner/Spinner\";\n\nconst Field = (props) => {\n  const history = useHistory();\n\n  const [fname, setfname] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [toggler, settoggler] = useState(false);\n  const [toggler2, settoggler2] = useState(false);\n  const [name, setnamedelete] = useState();\n  const [name2, setnamedelete2] = useState();\n  const onchange = (e) => {\n    setfname(e.target.value);\n  };\n  /*------------------------Toggler 1--------------------- */\n  const toggle = () => {\n    if (toggler == false) {\n      settoggler(true);\n    } else {\n      settoggler(false);\n    }\n  };\n  const close = () => {\n    settoggler(false);\n  };\n  const setnametodelete = (e, name) => {\n    setnamedelete(name);\n    toggle();\n  };\n  /*------------------------Toggler 2--------------------- */\n  const toggle2 = () => {\n    if (toggler2 == false) {\n      settoggler2(true);\n    } else {\n      settoggler2(false);\n    }\n  };\n  const close2 = () => {\n    settoggler2(false);\n  };\n  const setnametoedit2 = (e, oldname) => {\n    setnamedelete2(oldname);\n    toggle2();\n  };\n  /* ------------------------------------------------------*/\n  const fieldname = fname;\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  //Function to create field\n  const create_field = async (e) => {\n    e.preventDefault();\n    const ans = await createfield(fname);\n    if (ans) {\n      setmessage(\n        <p style={{ color: \"green\" }}>Field registered successfully</p>\n      );\n      setfname(\"\");\n      async function fetchfield() {\n        await props.getfields();\n      }\n      fetchfield();\n      setTimeout(() => {\n        setmessage(\"\");\n      }, 2000);\n    } else {\n      setmessage(\n        <p style={{ color: \"red\" }}>Oops! Field cannot be registered</p>\n      );\n      setTimeout(() => {\n        setmessage(\"\");\n      }, 2000);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchfield() {\n      await props.getfields();\n    }\n    fetchfield();\n  }, [toggler, toggler2]);\n\n  if (props.fields.isfetched === false) {\n    return <Spinner />;\n  } else {\n    return (\n      <Fragment>\n        {toggler == true ? (\n          <DeletePopup p_value={name} toggler={close} mainfunc={deletefield} />\n        ) : (\n          <Fragment></Fragment>\n        )}\n        {toggler2 == true ? (\n          <EditPopup toggler={close2} oldname={name2} mainfunc={editfield} />\n        ) : (\n          <Fragment></Fragment>\n        )}\n\n        <div className={classes[\"body\"]}>\n          <div className={classes[\"head\"]}>\n            <h1 className={classes[\"h1\"]}>User Defined Fields</h1>\n          </div>\n          <hr />\n          <br />\n\n          <div className={classes[\"form\"]}>\n            <input\n              name=\"name\"\n              value={fieldname}\n              onChange={(e) => onchange(e)}\n              className={classes[\"name\"]}\n              type=\"text\"\n              placeholder=\"Enter new field name\"\n            />\n            <button\n              onClick={(e) => create_field(e)}\n              className={classes[\"btn-1\"]}\n            >\n              <i class=\"fas fa-plus-square\"></i> Create\n            </button>\n            <div>{message}</div>\n          </div>\n\n          <br />\n          <table className={classes[\"table\"]}>\n            <tr>\n              <th className={classes[\"th\"]}>ID</th>\n              <th className={classes[\"th\"]}>\n                <b>NAME</b>\n              </th>\n              <th className={classes[\"th\"]}> </th>\n              <th className={classes[\"th\"]}> </th>\n            </tr>\n            {props.fields.c_fields.map((i) => {\n              if (i.ISORIGINAL === 0) {\n                return (\n                  <tr>\n                    <td className={classes[\"td\"]}>{i.ID}</td>\n                    <td className={classes[\"td\"]}>{i.NAME}</td>\n                    <td className={classes[\"td\"]}>\n                      <i\n                        onClick={(e) => setnametodelete(e, i.NAME)}\n                        style={{ color: \"red\" }}\n                        class=\"fas fa-trash-alt\"\n                      ></i>\n                    </td>\n                    <td\n                      style={{ color: \"darkgreen\" }}\n                      className={classes[\"td\"]}\n                    >\n                      <i\n                        class=\"far fa-edit\"\n                        onClick={(e) => setnametoedit2(e, i.NAME)}\n                      ></i>\n                    </td>\n                  </tr>\n                );\n              }\n            })}\n          </table>\n          <hr />\n        </div>\n      </Fragment>\n    );\n  }\n};\n\nField.propType = {\n  getfields: PropTypes.func.isRequired,\n  fields: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  fields: state.Field,\n});\nexport default connect(mapStateToProps, { getfields })(Field);\n","import React, { useState } from \"react\";\nimport classes from \"./EditPop.module.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst EditPop = (props) => {\n  const toggler = props.toggler;\n  const execfunc = props.mainfunc;\n  const id = props.id;\n  const oldname = props.oldname;\n  const [newname, setname] = useState(oldname);\n  const [msg, setmsg] = useState(\"\");\n  const name = newname;\n  const onchange = (e) => {\n    setname(e.target.value);\n  };\n\n  //Run the executable function\n  const onSubmit = async (e) => {\n    const fields = props.fields;\n    let isvalid = true;\n    fields.map((f) => {\n      if (f.G_NAME == newname) {\n        isvalid = false;\n      }\n    });\n    if (isvalid === false) {\n      setmsg(\"Name already exists!\");\n      return;\n    }\n    const res = await execfunc(id, newname);\n    if (res === false) {\n      setmsg(\"Please enter a valid name!\");\n      setInterval(() => {\n        setmsg(\"\");\n      }, 2000);\n    } else {\n      toggler();\n    }\n  };\n  return (\n    <div className={classes[\"body\"]}>\n      <div className={classes[\"form\"]}>\n        <p>Enter New Name : </p>\n        <input\n          value={name}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"New Name\"\n        />\n        <button onClick={(e) => onSubmit(e)} className={classes[\"btn\"]}>\n          <i class=\"fas fa-pen\"></i> Update\n        </button>\n        <button onClick={(e) => toggler(e)} className={classes[\"btn-2\"]}>\n          <i class=\"fas fa-times-circle\"></i>\n        </button>\n        <p style={{ color: \"red\" }}>{msg}</p>\n      </div>\n    </div>\n  );\n};\nEditPop.propTypes = {\n  fields: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  fields: state.Group.c_groups,\n});\nexport default connect(mapStateToProps, {})(EditPop);\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nimport { decryptData } from \"../Utils/EncryptDecrypt\";\n//import actions\nimport { SET_GROUPS } from \"../Actiontype\";\n\n//Function to fetch all the fields from the server\nexport const getgroups = () => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  //To be fetched from localstorage\n  const data = {\n    email: email || localStorage.getItem(\"email\"),\n    password: password || localStorage.getItem(\"password\"),\n  };\n  //Endpoint\n  const endpoint = host + \"/api/v1/groups/getallgroups\";\n\n  const groups = await axios.post(endpoint, data, config);\n  localStorage.removeItem(\"allgroups\");\n  localStorage.setItem(\"allgroups\", JSON.stringify(groups.data.rows));\n  //Dispatch the data into the store\n  dispatch({\n    type: SET_GROUPS,\n    data: groups.data.rows,\n  });\n};\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst creategroup = async (name) => {\n  try {\n    if (name.length == 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/groups/creategroup\";\n    const data = {\n      email,\n      password,\n      g_name: name,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default creategroup;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst deletegroup = async (id) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/groups/deletegroup\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      g_id: id,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default deletegroup;\n","import axios from \"axios\";\nimport { email, password } from \"../auth\";\nimport host from \"../host\";\nconst editgroup = async (id, new_name) => {\n  try {\n    if (new_name.length === 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/groups/editgroup\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      g_id: id,\n      g_name: new_name,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default editgroup;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./Group.module.css\";\nimport DeletePopup from \"../DeletePop/DeletePopup\";\nimport EditPopup from \"../EditPop/EditPopGroup\";\n//Import action files\nimport { getgroups } from \"../../Actions/Getgroups\";\nimport Spinner from \"../Spinner/Spinner\";\n//util to create new field\nimport creategroup from \"../../Utils/CreateGroup\";\nimport deletegroup from \"../../Utils/DeleteGroup\";\nimport editgroup from \"../../Utils/EditGroup\";\nconst Group = (props) => {\n  const history = useHistory();\n\n  const [gname, setgname] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [toggler, settoggler] = useState(false);\n  const [toggler2, settoggler2] = useState(false);\n  const [id, setid] = useState();\n  const [name2, setnametoedit] = useState();\n  const onchange = (e) => {\n    setgname(e.target.value);\n  };\n  /*------------------------Toggler 1--------------------- */\n  const toggle = () => {\n    if (toggler == false) {\n      settoggler(true);\n    } else {\n      settoggler(false);\n    }\n  };\n  const close = () => {\n    settoggler(false);\n  };\n  const setidtodelete = (e, id) => {\n    setid(id);\n    toggle();\n  };\n  /*------------------------Toggler 2--------------------- */\n  const toggle2 = () => {\n    if (toggler2 == false) {\n      settoggler2(true);\n    } else {\n      settoggler2(false);\n    }\n  };\n  const close2 = () => {\n    settoggler2(false);\n  };\n  const setnametoedit2 = (e, oldname, id) => {\n    setnametoedit(oldname);\n    setid(id);\n    toggle2();\n  };\n  /* ------------------------------------------------------*/\n  const groupname = gname;\n\n  //Function to create field\n  const create_group = async (e) => {\n    e.preventDefault();\n    const ans = await creategroup(gname);\n    if (ans) {\n      setmessage(\n        <p style={{ color: \"green\" }}>Group registered successfully</p>\n      );\n      setgname(\"\");\n      async function fetchgroups() {\n        await props.getgroups();\n      }\n      fetchgroups();\n      setTimeout(() => {\n        setmessage(\"\");\n      }, 2000);\n    } else {\n      setmessage(\n        <p style={{ color: \"red\" }}>Oops! Group cannot be registered</p>\n      );\n      setTimeout(() => {\n        setmessage(\"\");\n      }, 2000);\n    }\n  };\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  useEffect(() => {\n    async function fetchgroups() {\n      await props.getgroups();\n    }\n    fetchgroups();\n  }, [toggler, toggler2]);\n\n  if (props.groups.isfetched === false) {\n    return <Spinner />;\n  } else {\n    return (\n      <Fragment>\n        {toggler == true ? (\n          <DeletePopup p_value={id} toggler={close} mainfunc={deletegroup} />\n        ) : (\n          <Fragment></Fragment>\n        )}\n        {toggler2 == true ? (\n          <EditPopup\n            toggler={close2}\n            oldname={name2}\n            id={id}\n            mainfunc={editgroup}\n          />\n        ) : (\n          <Fragment></Fragment>\n        )}\n\n        <div className={classes[\"body\"]}>\n          <div className={classes[\"head\"]}>\n            <h1 className={classes[\"h1\"]}>User Defined Groups</h1>\n          </div>\n          <hr />\n          <br />\n\n          <div className={classes[\"form\"]}>\n            <input\n              name=\"name\"\n              value={groupname}\n              onChange={(e) => onchange(e)}\n              className={classes[\"name\"]}\n              type=\"text\"\n              placeholder=\"Enter new group name\"\n            />\n            <button\n              onClick={(e) => create_group(e)}\n              className={classes[\"btn-1\"]}\n            >\n              <i class=\"fas fa-plus-square\"></i> Create\n            </button>\n            <div>{message}</div>\n          </div>\n\n          <br />\n          <table className={classes[\"table\"]}>\n            <tr>\n              <th className={classes[\"th\"]}>ID</th>\n              <th className={classes[\"th\"]}>\n                <b>NAME</b>\n              </th>\n              <th className={classes[\"th\"]}> </th>\n              <th className={classes[\"th\"]}> </th>\n            </tr>\n            {props.groups.c_groups.map((i) => {\n              return (\n                <tr>\n                  <td className={classes[\"td\"]}>{i.G_ID}</td>\n                  <td className={classes[\"td\"]}>{i.G_NAME}</td>\n                  <td className={classes[\"td\"]}>\n                    <i\n                      onClick={(e) => setidtodelete(e, i.G_ID)}\n                      style={{ color: \"red\" }}\n                      class=\"fas fa-trash-alt\"\n                    ></i>\n                  </td>\n                  <td style={{ color: \"darkgreen\" }} className={classes[\"td\"]}>\n                    <i\n                      class=\"far fa-edit\"\n                      onClick={(e) => setnametoedit2(e, i.G_NAME, i.G_ID)}\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })}\n          </table>\n          <hr />\n        </div>\n      </Fragment>\n    );\n  }\n};\n\nGroup.propType = {\n  getgroups: PropTypes.func.isRequired,\n  fields: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  groups: state.Group,\n});\nexport default connect(mapStateToProps, { getgroups })(Group);\n","import React, { useState } from \"react\";\nimport classes from \"./EditPop.module.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst EditPop = (props) => {\n  const toggler = props.toggler;\n  const execfunc = props.mainfunc;\n  const id = props.id;\n  const oldname = props.oldname;\n  const [newname, setname] = useState(oldname);\n  const [msg, setmsg] = useState(\"\");\n  const name = newname;\n  const onchange = (e) => {\n    setname(e.target.value);\n  };\n\n  //Run the executable function\n  const onSubmit = async (e) => {\n    const modules = props.modules;\n    let isvalid = true;\n    modules.map((f) => {\n      if (f.M_NAME == newname) {\n        isvalid = false;\n      }\n    });\n    if (isvalid === false) {\n      setmsg(\"Name already exists!\");\n      return;\n    }\n    const res = await execfunc(id, newname);\n    if (res === false) {\n      setmsg(\"Please enter a valid name!\");\n      setInterval(() => {\n        setmsg(\"\");\n      }, 2000);\n    } else {\n      toggler();\n    }\n  };\n  return (\n    <div className={classes[\"body\"]}>\n      <div className={classes[\"form\"]}>\n        <p>Enter New Name : </p>\n        <input\n          value={name}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"New Name\"\n        />\n        <button onClick={(e) => onSubmit(e)} className={classes[\"btn\"]}>\n          <i class=\"fas fa-pen\"></i> Update\n        </button>\n        <button onClick={(e) => toggler(e)} className={classes[\"btn-2\"]}>\n          <i class=\"fas fa-times-circle\"></i>\n        </button>\n        <p style={{ color: \"red\" }}>{msg}</p>\n      </div>\n    </div>\n  );\n};\nEditPop.propTypes = {\n  modules: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  modules: state.Module.c_modules,\n});\nexport default connect(mapStateToProps, {})(EditPop);\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\n//import actions\nimport { SET_MODULES } from \"../Actiontype\";\n\n//Function to fetch all the fields from the server\nexport const getmodules = () => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const data = {\n    email: email || localStorage.getItem(\"email\"),\n    password: password || localStorage.getItem(\"password\"),\n  };\n  //Endpoint\n  const endpoint = host + \"/api/v1/module/getallmodules\";\n\n  const modules = await axios.post(endpoint, data, config);\n\n  //Dispatch the data into the store\n  dispatch({\n    type: SET_MODULES,\n    data: modules.data.rows,\n  });\n};\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst createmodule = async (name) => {\n  try {\n    if (name.length == 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/module/createmodule\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      m_name: name,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default createmodule;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst deletemodule = async (id) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/module/deletemodule\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      m_id: id,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default deletemodule;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst editmodule = async (id, new_name) => {\n  try {\n    if (new_name.length === 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/module/editmodule\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      m_id: id,\n      m_name: new_name,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default editmodule;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport classes from \"./Module.module.css\";\nimport DeletePopup from \"../DeletePop/DeletePopup\";\nimport EditPopup from \"../EditPop/EditPopModule\";\n//Import action files\nimport { getmodules } from \"../../Actions/GetAllModules\";\nimport Spinner from \"../Spinner/Spinner\";\n//util to create new field\nimport createmodule from \"../../Utils/CreateModule\";\nimport deletemodule from \"../../Utils/DeleteModule\";\nimport editmodule from \"../../Utils/EditModule\";\nconst Module = (props) => {\n  const history = useHistory();\n\n  const [m_name, setmmane] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n  const [toggler, settoggler] = useState(false);\n  const [toggler2, settoggler2] = useState(false);\n  const [id, setid] = useState();\n  const [name2, setnametoedit] = useState();\n  const onchange = (e) => {\n    setmmane(e.target.value);\n  };\n  /*------------------------Toggler 1--------------------- */\n  const toggle = () => {\n    if (toggler == false) {\n      settoggler(true);\n    } else {\n      settoggler(false);\n    }\n  };\n  const close = () => {\n    settoggler(false);\n  };\n  const setidtodelete = (e, id) => {\n    setid(id);\n    toggle();\n  };\n  /*------------------------Toggler 2--------------------- */\n  const toggle2 = () => {\n    if (toggler2 == false) {\n      settoggler2(true);\n    } else {\n      settoggler2(false);\n    }\n  };\n  const close2 = () => {\n    settoggler2(false);\n  };\n  const setnametoedit2 = (e, oldname, id) => {\n    setnametoedit(oldname);\n    setid(id);\n    toggle2();\n  };\n  /* ------------------------------------------------------*/\n  const groupname = m_name;\n\n  //Function to create field\n  const create_module = async (e) => {\n    e.preventDefault();\n    const ans = await createmodule(m_name);\n    if (ans) {\n      setmessage(\n        <p style={{ color: \"green\" }}>Module registered successfully</p>\n      );\n      setmmane(\"\");\n      async function fetchmodules() {\n        await props.getmodules();\n      }\n      fetchmodules();\n      setTimeout(() => {\n        setmessage(\"\");\n      }, 2000);\n    } else {\n      setmessage(\n        <p style={{ color: \"red\" }}>Oops! Module cannot be registered</p>\n      );\n      setTimeout(() => {\n        setmessage(\"\");\n      }, 2000);\n    }\n  };\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  useEffect(() => {\n    async function fetchmodules() {\n      await props.getmodules();\n    }\n    fetchmodules();\n  }, [toggler, toggler2]);\n\n  if (props.modules.isfetched === false) {\n    return <Spinner />;\n  } else {\n    return (\n      <Fragment>\n        {toggler == true ? (\n          <DeletePopup p_value={id} toggler={close} mainfunc={deletemodule} />\n        ) : (\n          <Fragment></Fragment>\n        )}\n        {toggler2 == true ? (\n          <EditPopup\n            toggler={close2}\n            oldname={name2}\n            id={id}\n            mainfunc={editmodule}\n          />\n        ) : (\n          <Fragment></Fragment>\n        )}\n\n        <div className={classes[\"body\"]}>\n          <div className={classes[\"head\"]}>\n            <h1 className={classes[\"h1\"]}>User Defined Modules</h1>\n          </div>\n          <hr />\n          <br />\n\n          <div className={classes[\"form\"]}>\n            <input\n              name=\"name\"\n              value={groupname}\n              onChange={(e) => onchange(e)}\n              className={classes[\"name\"]}\n              type=\"text\"\n              placeholder=\"Enter new module name\"\n            />\n            <button\n              onClick={(e) => create_module(e)}\n              className={classes[\"btn-1\"]}\n            >\n              <i class=\"fas fa-plus-square\"></i> Create\n            </button>\n            <div>{message}</div>\n          </div>\n\n          <br />\n          <table className={classes[\"table\"]}>\n            <tr>\n              <th className={classes[\"th\"]}>ID</th>\n              <th className={classes[\"th\"]}>\n                <b>NAME</b>\n              </th>\n              <th className={classes[\"th\"]}> </th>\n              <th className={classes[\"th\"]}> </th>\n            </tr>\n            {props.modules.c_modules.map((i) => {\n              return (\n                <tr>\n                  <td className={classes[\"td\"]}>{i.M_ID}</td>\n                  <td className={classes[\"td\"]}>{i.M_NAME}</td>\n                  <td className={classes[\"td\"]}>\n                    <i\n                      onClick={(e) => setidtodelete(e, i.M_ID)}\n                      style={{ color: \"red\" }}\n                      class=\"fas fa-trash-alt\"\n                    ></i>\n                  </td>\n                  <td style={{ color: \"darkgreen\" }} className={classes[\"td\"]}>\n                    <i\n                      class=\"far fa-edit\"\n                      onClick={(e) => setnametoedit2(e, i.M_NAME, i.M_ID)}\n                    ></i>\n                  </td>\n                </tr>\n              );\n            })}\n          </table>\n          <hr />\n        </div>\n      </Fragment>\n    );\n  }\n};\n\nModule.propType = {\n  getmodules: PropTypes.func.isRequired,\n  fields: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  modules: state.Module,\n});\nexport default connect(mapStateToProps, { getmodules })(Module);\n","import axios from \"axios\";\nimport host from \"../../host\";\nimport { GET_ALL_COMPANIES, CLEAR_COMP } from \"../../Actiontype\";\nimport { email, password } from \"../../auth\";\n//Function to fetch all the companies\nconst getallcompanies = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: CLEAR_COMP,\n      data: [],\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    //To be fetched from the localstorage\n    const endpoint = host + \"/api/v1/company/getallcompanies\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n    };\n    const res = await axios.post(endpoint, data, config);\n    localStorage.removeItem(\"allcompany\");\n    localStorage.setItem(\"allcompany\", JSON.stringify(res.data.c_data));\n    dispatch({\n      type: GET_ALL_COMPANIES,\n      data: res.data.c_data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getallcompanies;\n","import axios from \"axios\";\nimport host from \"../../host\";\nimport {\n  SEARCH_FIRST_COMP,\n  GET_ALL_COMPANIES,\n  CLEAR_COMP,\n} from \"../../Actiontype\";\nimport { email, password } from \"../../auth\";\n//Function to fetch all the companies\nconst getfirstnamecomp = (search_name) => async (dispatch) => {\n  try {\n    dispatch({\n      type: CLEAR_COMP,\n      data: [],\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    //To be fetched from the localstorage\n    let endpoint = host + \"/api/v1/company/getallcompanies\";\n    let data = {\n      email,\n      password,\n    };\n    const res = await axios.post(endpoint, data, config);\n    const companies = res.data.c_data;\n    endpoint = host + \"/api/v1/query/getcompanybasedonfirstname\";\n    data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      q_string: search_name,\n    };\n    const comp_first = [];\n    let q_array = await axios.post(endpoint, data, config);\n    q_array = q_array.data.c_id;\n    for (var i = 0; i < companies.length; i++) {\n      for (var j = 0; j < q_array.length; j++) {\n        if (q_array[j].C_ID === companies[i].C_ID) {\n          comp_first.push(companies[i]);\n        }\n      }\n    }\n    dispatch({\n      type: SEARCH_FIRST_COMP,\n      data: comp_first,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getfirstnamecomp;\n","import axios from \"axios\";\nimport host from \"../../host\";\nimport { email, password } from \"../../auth\";\nimport {\n  SEARCH_ALL_COMP,\n  GET_ALL_COMPANIES,\n  CLEAR_COMP,\n} from \"../../Actiontype\";\n\n//Function to fetch all the companies\nconst getallcomp = (search_name) => async (dispatch) => {\n  try {\n    dispatch({\n      type: CLEAR_COMP,\n      data: [],\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    let endpoint = host + \"/api/v1/company/getallcompanies\";\n    let data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n    };\n    const res = await axios.post(endpoint, data, config);\n    const companies = res.data.c_data;\n    endpoint = host + \"/api/v1/query/getcompanybasedonname\";\n    data = {\n      email,\n      password,\n      q_string: search_name,\n    };\n    let q_array = await axios.post(endpoint, data, config);\n    q_array = q_array.data.c_id;\n    const comp_all = [];\n    for (var i = 0; i < companies.length; i++) {\n      for (var j = 0; j < q_array.length; j++) {\n        if (q_array[j].C_ID === companies[i].C_ID) {\n          comp_all.push(companies[i]);\n        }\n      }\n    }\n    dispatch({\n      type: SEARCH_ALL_COMP,\n      data: comp_all,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getallcomp;\n","import React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Company.module.css\";\nimport { Redirect, useHistory } from \"react-router\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Spinner from \"../../Spinner/Spinner\";\nconst Showallcompany = (props) => {\n  const history = useHistory();\n  if (props.company.isfetched === false||props.fields.isfetched === false) {\n    return <Spinner />;\n  }\n\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  const fields = JSON.parse(localStorage.getItem(\"allfields\"))||[];\n  return (\n    <Fragment>\n      <hr />\n      <br />\n      <div className={classes[\"resp\"]}>\n        <table className={classes[\"table\"]}>\n          <tr>\n            {fields.map((f) => {\n              return <th className={classes[\"th\"]}>{f.NAME}</th>;\n            })}\n            <th className={classes[\"th\"]}>Edit</th>\n          </tr>\n          {props.company.querycompanies.map((c) => {\n            return (\n              <tr>\n                {fields.map((f) => {\n                  if (f.NAME === \"C_COUNTRY\") {\n                    const datee = JSON.parse(c[f.NAME]);\n                    const output = datee[\"label\"];\n                    return (\n                      <td style={{ width: \"auto\", padding: \"10px\" }}>\n                        {output}\n                      </td>\n                    );\n                  }\n                  return (\n                    <td style={{ width: \"auto\", padding: \"10px\" }}>\n                      {c[f.NAME]}\n                    </td>\n                  );\n                })}\n                <Link\n                  to={{\n                    pathname: \"/particularcompany\",\n                    company: c,\n                  }}\n                >\n                  <i\n                    style={{\n                      color: \"green\",\n                      cursor: \"pointer\",\n                      marginTop: \"60%\",\n                    }}\n                    class=\"fas fa-eye\"\n                  ></i>\n                </Link>\n              </tr>\n            );\n          })}\n        </table>\n      </div>\n    </Fragment>\n  );\n};\nShowallcompany.propTypes = {\n  company: PropTypes.object.isRequired,\n  fields:PropTypes.object.isRequired\n};\nconst mapStatetoProps = (state) => ({\n  company: state.All_Companies,\n  fields:state.Field\n});\nexport default withRouter(connect(mapStatetoProps, {})(Showallcompany));\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Showcompany.module.css\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\n//Import actions\nimport getallcompanies from \"../../Actions/Company/Getallcompanies\";\nimport getfirstnamecomp from \"../../Actions/Company/GetFirstnameComp\";\nimport { getgroups } from \"../../Actions/Getgroups\";\nimport { getfields } from \"../../Actions/Getfields\";\nimport getallcomp from \"../../Actions/Company/GetAllComp\";\n\n//Import components to be shown\nimport Showallcompany from \"./ShowAllCompanies/Showallcompany\";\n\nconst ShowCompany = (props) => {\n  const history = useHistory();\n\n  const [color, setcolor] = useState({\n    c1: \"red\",\n    c2: \"#00af91\",\n    first: true,\n  });\n  const [querystr, setstr] = useState(\"\");\n  const str = querystr;\n\n  //Show all companies\n  const showall = async (e) => {\n    await props.getallcompanies();\n  };\n  //Input field on change\n  const onChange = (e) => {\n    setstr(e.target.value);\n  };\n  const toggle = (e) => {\n    if (e.target.name === \"c1\") {\n      setcolor({\n        c1: \"red\",\n        c2: \"#00af91\",\n        first: true,\n      });\n    } else {\n      setcolor({\n        c2: \"red\",\n        c1: \"#00af91\",\n        first: false,\n      });\n    }\n  };\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  //Function to search\n  const search = (e) => {\n    querystr.trim();\n    if (querystr.trim().length === 0) {\n      return;\n    }\n    if (color.first === false) {\n      async function query() {\n        await props.getallcomp(querystr.trim());\n      }\n      query();\n    } else {\n      async function query() {\n        await props.getfirstnamecomp(querystr.trim());\n      }\n      query();\n    }\n  };\n\n  useEffect(() => {\n\n    async function getallcompp() {\n      await props.getallcompanies();\n      await props.getfields();\n      await props.getgroups();\n    }\n    getallcompp();\n  }, [props]);\n\n  return (\n    <Fragment>\n      <div className={classes[\"body\"]}>\n        <div className={classes[\"head\"]}>\n          <h1 className={classes[\"h1\"]}>Registered Companies</h1>\n        </div>\n        <div className={classes[\"search\"]}>\n          <input\n            value={str}\n            onChange={(e) => onChange(e)}\n            className={classes[\"input\"]}\n            type=\"text\"\n            placeholder=\"Enter the company name\"\n          />\n          <button className={classes[\"search-2\"]} onClick={(e) => search(e)}>\n            <i className=\"fas fa-search\"></i> Search\n          </button>\n          <button\n            name=\"c1\"\n            onClick={(e) => toggle(e)}\n            style={{ backgroundColor: color.c1, border: color.c1 }}\n            className={classes[\"occ\"]}\n          >\n            FO\n          </button>\n          <button\n            onClick={(e) => toggle(e)}\n            name=\"c2\"\n            style={{ backgroundColor: color.c2, border: color.c2 }}\n            className={classes[\"occ\"]}\n          >\n            AO\n          </button>\n          <button className={classes[\"search-3\"]} onClick={(e) => showall(e)}>\n            Show All Companies\n          </button>\n          <button\n            className={classes[\"search-3\"]}\n            style={{ marginTop: \"20px\", marginLeft: \"0px\" }}\n            onClick={(e) => history.push(\"/groupsearch\")}\n          >\n            <i className=\"fas fa-search\"></i> Search based in groups\n          </button>\n        </div>\n        <Showallcompany />\n      </div>\n    </Fragment>\n  );\n};\nShowCompany.propType = {\n  getallcompanies: PropTypes.func.isRequired,\n  getfirstnamecomp: PropTypes.func.isRequired,\n  getallcomp: PropTypes.func.isRequired,\n  getgroups: PropTypes.func.isRequired,\n  getfields: PropTypes.func.isRequired,\n};\nexport default connect(null, {\n  getallcompanies,\n  getfirstnamecomp,\n  getallcomp,\n  getgroups,\n  getfields,\n})(ShowCompany);\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst createperson = async (obj) => {\n  try {\n    if (obj[\"NAME\"].length == 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/person/createperson\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      ...obj,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default createperson;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst deletecompany = async (id) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/company/deletecompany\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      c_id: id,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default deletecompany;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport classes from \"./ShowPComp.module.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { usehistory } from \"react-dom\";\n//import the action files\nimport { getgroups } from \"../../../../Actions/Getgroups\";\nimport { getmodules } from \"../../../../Actions/GetAllModules\";\nimport { getfields } from \"../../../../Actions/Getfields\";\nimport { useHistory } from \"react-router\";\nimport { withRouter, Link } from \"react-router-dom\";\n//import deletepopup component\nimport DeletePopup from \"../../../DeletePop/DeletePopup\";\nimport createperson from \"../../../../Utils/Createperson\";\n//import the delete function\nimport deletecompany from \"../../../../Utils/DeleteCompany\";\nimport Spinner from \"../../../Spinner/Spinner\";\n//need to call all fields,modules and groups.... from server in useeffect\n\nconst ShowPComp = (props) => {\n  const [toggler, settoggler] = useState(false);\n  const [id, setid] = useState();\n  const history = useHistory();\n\n  //First set the details in localstorage\n  let company;\n\n  if (props.location.company !== undefined) {\n    //get the company from props\n    company = props.location.company;\n    const res = JSON.stringify(props.location.company);\n    localStorage.setItem(\"comp\", res);\n  } else {\n    const comp = localStorage.getItem(\"comp\");\n\n    company = JSON.parse(comp);\n  }\n\n  /*------------------------Toggler 1--------------------- */\n  const toggle = () => {\n    if (toggler == false) {\n      settoggler(true);\n    } else {\n      settoggler(false);\n    }\n  };\n  const close = () => {\n    settoggler(false);\n  };\n  const setidtodelete = (e, id) => {\n    setid(id);\n    toggle();\n  };\n  const [res, setres] = useState({\n    C_ID: company[\"C_ID\"],\n    NAME: \"\",\n    EMAIL: \"\",\n    MOBILE: \"\",\n    DESIGNATION: \"\",\n  });\n  const [errmsg, seterrmsg] = useState();\n  //Set the person field object for creating a new object\n  const setpersonfield = (e) => {\n    setres({ ...res, [e.target.name]: e.target.value });\n  };\n\n  //Function when user creates a person\n  const createper = async (e) => {\n    //console.log(res);\n    const result = await createperson(res);\n    if (result === false) {\n      seterrmsg(\n        <p style={{ color: \"red\" }}>Error in inserting person's record</p>\n      );\n      setTimeout(() => {\n        seterrmsg(\"\");\n      }, 2000);\n    } else {\n      seterrmsg(\n        <p style={{ color: \"green\" }}>\n          Successfully inserted a new person's record\n        </p>\n      );\n      setTimeout(() => {\n        seterrmsg(\"\");\n      }, 2000);\n    }\n  };\n  useEffect(() => {\n    async function fetchall() {\n      await props.getgroups();\n      await props.getmodules();\n      await props.getfields();\n    }\n    fetchall();\n  }, []);\n  if (\n    props.groups.isfetched === false ||\n    props.modules.isfetched === false ||\n    props.fields.isfetched === false\n  ) {\n    return <Spinner />;\n  }\n\n  //get the groups\n  const allgroups = props.groups.c_groups;\n\n  //get the modules\n  const allmodules = props.modules.c_modules;\n\n  //get the fields\n  const fields = props.fields.c_fields;\n\n  //map the company groups and fields\n\n  const c_g = company.C_G_ID;\n  const c_m = company.C_M_ID;\n  const c_groups = [];\n  const c_modules = [];\n  for (var i = 0; i < c_g.length; i++) {\n    let id = c_g[i];\n    for (var j = 0; j < allgroups.length; j++) {\n      if (allgroups[j].G_ID == id) {\n        c_groups.push(allgroups[j].G_NAME);\n      }\n    }\n  }\n  for (i = 0; i < c_m.length; i++) {\n    let id = c_m[i];\n    for (j = 0; j < allmodules.length; j++) {\n      if (allmodules[j].M_ID == id) {\n        c_modules.push(allmodules[j].M_NAME);\n      }\n    }\n  }\n  const comp_arr = Object.entries(company);\n  const comp_obj = [];\n  for (var i = 0; i < comp_arr.length; i++) {\n    let value = comp_arr[i][1];\n    if (comp_arr[i][1] instanceof Array) {\n      continue;\n    }\n    if (!value) {\n      value = \"null\";\n    }\n    let key = comp_arr[i][0];\n    if (key == \"C_ACTIVE\") {\n      continue;\n    }\n    if (key == \"C_CREATED_AT\") {\n      const temp = Date.parse(value);\n      const showdate = new Date(temp);\n      value = showdate.toString().substr(0, 15);\n    }\n    if (key == \"C_COUNTRY\") {\n      const temp = JSON.parse(value);\n      value = temp[\"label\"];\n    }\n    comp_obj.push({\n      key: key,\n      value: value,\n    });\n  }\n  let msg;\n  let msg2;\n  let clr;\n  if (c_modules.length === 0) {\n    msg = \"No modules set for this company!\";\n  }\n  if (c_groups.length === 0) {\n    msg2 = \"No groups set for this company!\";\n  }\n  if (company[\"C_ACTIVE\"] == 1) {\n    clr = <i style={{ color: \"green\" }} class=\"fas fa-circle\"></i>;\n  } else {\n    clr = <i style={{ color: \"red\" }} class=\"fas fa-circle\"></i>;\n  }\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  return (\n    <div className={classes[\"body\"]}>\n      {toggler == true ? (\n        <DeletePopup\n          p_value={id}\n          toggler={close}\n          mainfunc={deletecompany}\n          reroute=\"/companies\"\n        />\n      ) : (\n        <Fragment></Fragment>\n      )}\n      <h1 className={classes[\"head\"]}>Details of company : {company.C_NAME}</h1>\n      <br />\n      <br />\n      <div className={classes[\"deledit\"]}>\n        <Link\n          to={{\n            pathname: \"/editcompany\",\n            company: JSON.parse(localStorage.getItem(\"comp\")),\n          }}\n        >\n          <button className={classes[\"edit\"]}>\n            Edit <i class=\"fas fa-edit\"></i>\n          </button>\n        </Link>\n\n        <button\n          onClick={(e) => setidtodelete(e, company.C_ID)}\n          className={classes[\"delete\"]}\n        >\n          Delete <i class=\"fas fa-trash-alt\"></i>\n        </button>\n      </div>\n      <hr style={{ width: \"80%\", color: \"grey\" }} />\n      <div className={classes[\"module\"]}>\n        <h3 style={{ textAlign: \"left\", color: \"#007965\" }}>\n          Company_Modules <i class=\"fas fa-tags\"></i>\n        </h3>\n        <div className={classes[\"flex\"]}>\n          {c_modules.map((i) => {\n            return <p className={classes[\"p\"]}>{i}</p>;\n          })}\n        </div>\n        {msg}\n      </div>\n      <div className={classes[\"module\"]}>\n        <h3 style={{ textAlign: \"left\", color: \"#007965\" }}>\n          Company_Groups <i class=\"fas fa-layer-group\"></i>\n        </h3>\n        <div className={classes[\"flex\"]}>\n          {c_groups.map((i) => {\n            return <p className={classes[\"p\"]}>{i}</p>;\n          })}\n        </div>\n        {msg2}\n      </div>\n      <br />\n      <hr style={{ width: \"80%\", color: \"grey\" }} />\n      <table className={classes[\"table\"]}>\n        <tr>\n          <th className={classes[\"th\"]}>Field</th>\n          <th className={classes[\"th-1\"]}>\n            <b>Value</b>\n          </th>\n          <th className={classes[\"th\"]}></th>\n          <th className={classes[\"th\"]}> </th>\n        </tr>\n        <tr className={classes[\"tr\"]}>\n          <td className={classes[\"td\"]}>ACTIVE STATUS</td>\n          <td className={classes[\"td-1\"]}>{clr}</td>\n        </tr>\n        {comp_obj.map((item) => {\n          return (\n            <tr className={classes[\"tr\"]}>\n              <td className={classes[\"td\"]}>{item[\"key\"]}</td>\n              <td className={classes[\"td-1\"]}>{item[\"value\"]}</td>\n            </tr>\n          );\n        })}\n      </table>\n      <div className={classes[\"buttons\"]}>\n        <button\n          className={classes[\"btn\"]}\n          onClick={(e) => {\n            history.push(\"/company/personlist\");\n          }}\n        >\n          Click here to view registered people{\" \"}\n          <i class=\"fas fa-user-friends\"></i>\n        </button>\n      </div>\n      <div className={classes[\"form\"]}>\n        <h2>Insert a person's record in {company.C_NAME}</h2>\n        <br />\n        <hr />\n        <p>Name:</p>\n        <input\n          name=\"NAME\"\n          className={classes[\"input\"]}\n          type=\"text\"\n          onChange={(e) => setpersonfield(e)}\n        />\n        <p>Email:</p>\n        <input\n          name=\"EMAIL\"\n          className={classes[\"input\"]}\n          type=\"text\"\n          onChange={(e) => setpersonfield(e)}\n        />\n        <p>Mobile:</p>\n        <input\n          name=\"MOBILE\"\n          className={classes[\"input\"]}\n          type=\"text\"\n          onChange={(e) => setpersonfield(e)}\n        />\n        <p>Designation:</p>\n        <input\n          name=\"DESIGNATION\"\n          className={classes[\"input\"]}\n          type=\"text\"\n          onChange={(e) => setpersonfield(e)}\n        />\n        {errmsg}\n        <button\n          onClick={(e) => createper(e)}\n          className={classes[\"btn\"]}\n          style={{ display: \"block\", marginTop: \"20px\" }}\n        >\n          Create <i class=\"fas fa-pen\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\nShowPComp.propType = {\n  getgroups: PropTypes.func.isRequired,\n  getfields: PropTypes.func.isRequired,\n  getmodules: PropTypes.func.isRequired,\n  fields: PropTypes.object.isRequired,\n  groups: PropTypes.object.isRequired,\n  module: PropTypes.object.isRequired,\n};\nconst mapStatetoProps = (state) => ({\n  groups: state.Group,\n  modules: state.Module,\n  fields: state.Field,\n});\nexport default withRouter(\n  connect(mapStatetoProps, { getgroups, getmodules, getfields })(ShowPComp)\n);\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst createcompany = async (comp) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //To be fethched from localstorage\n    //Endpoint\n    const endpoint = host + \"/api/v1/company/createcompany\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n    };\n    const c_data = { ...data, ...comp };\n    console.log(c_data, config, endpoint);\n    const res = await axios.post(endpoint, c_data, config);\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\n\nexport default createcompany;\n","import React, { useState, useEffect, Fragment, useMemo } from \"react\";\nimport classes from \"./Companyform.module.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport MultiSelect from \"react-multiple-select-dropdown-lite\";\nimport \"react-multiple-select-dropdown-lite/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\nimport Spinner from \"../../Spinner/Spinner\";\n//import the action files\nimport { getgroups } from \"../../../Actions/Getgroups\";\nimport { getmodules } from \"../../../Actions/GetAllModules\";\nimport { getfields } from \"../../../Actions/Getfields\";\nimport getallcompanies from \"../../../Actions/Company/Getallcompanies\";\n//import from utils\nimport createcompany from \"../../../Utils/CreateCompany\";\nimport { useHistory } from \"react-router\";\nconst CompanyForm = (props) => {\n  //state for error message\n  const [err, seterr] = useState(\"\");\n  //For country codes\n  const [country, setcountry] = useState(\"\");\n  const options = useMemo(() => countryList().getData(), []);\n\n  const changecountry = (value) => {\n    setcountry(value);\n  };\n  const history = useHistory();\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  const [date, setdate] = useState();\n\n  useEffect(() => {\n    async function fetchall() {\n      await props.getgroups();\n      await props.getmodules();\n      await props.getfields();\n      await props.getallcompanies();\n    }\n    fetchall();\n    const dd = Date.now();\n    const currd = new Date(dd);\n    setdate(currd);\n  }, [err]);\n\n  \n\n  //For groups\n  const [value, setvalue] = useState();\n\n  const handleOnchange = (val) => {\n    setvalue(val);\n  };\n\n  //For modules\n  const [value2, setvalue2] = useState();\n\n  const handleOnchange2 = (val) => {\n    setvalue2(val);\n  };\n  if (\n    props.groups.isfetched === false ||\n    props.modules.isfetched === false ||\n    props.fields.isfetched === false\n  ) {\n    return <Spinner />;\n  }\n  //get the groups\n  const allgroups = props.groups.c_groups;\n\n  //get the modules\n  const allmodules = props.modules.c_modules;\n\n  //get the fields\n  const fields = props.fields.c_fields;\n\n  const res = {};\n  fields.map((id) => {\n    return (res[id.NAME] = \"\");\n  });\n  res[\"C_ACTIVE\"] = 1;\n  const onChange = (e) => {\n    res[e.target.name] = e.target.value;\n  };\n\n  const setdatemy = (date) => {\n    setdate(date);\n  };\n\n  //on form submission\n  const create = async (e) => {\n    res[\"C_CREATED_AT\"] = date.toString();\n    console.log(date, res[\"C_CREATED_AT\"]);\n\n    res[\"C_COUNTRY\"] = JSON.stringify(country);\n\n    if (value != undefined || value != null) {\n      res[\"C_G_ID\"] = value.split(\",\");\n    } else {\n      res[\"C_G_ID\"] = [];\n    }\n    if (value2 != undefined || value2 != null) {\n      res[\"C_M_ID\"] = value2.split(\",\");\n    } else {\n      res[\"C_M_ID\"] = [];\n    }\n\n    var flag = 0;\n    props.allcomp.map((c) => {\n      if (res[\"C_NAME\"] == c.C_NAME) {\n        flag = 1;\n      }\n    });\n    console.log(res);\n    if (flag === 1 || res[\"C_NAME\"].length == 0) {\n      seterr(\n        <p style={{ color: \"red\" }}>\n          Cannot set/modify company.Either there exists a company with this name\n          or there is\n          <br /> some error!\n        </p>\n      );\n      setTimeout(() => {\n        seterr(\"\");\n      }, 2000);\n      return;\n    }\n    const rres = await createcompany(res);\n    if (rres == false) {\n      seterr(\n        <p style={{ color: \"red\" }}>\n          Cannot set/modify company.Either there exists a company with this name\n          or there is\n          <br /> some error!\n        </p>\n      );\n    } else {\n      seterr(\n        <p style={{ color: \"green\" }}>Company registered successfully!</p>\n      );\n    }\n    setTimeout(() => {\n      seterr(\"\");\n    }, 2000);\n  };\n\n  //Create the group array for dropdown\n  const g_options = [];\n  const m_options = [];\n\n  allgroups.map((g) => {\n    return g_options.push({\n      label: g.G_NAME,\n      value: g.G_ID,\n    });\n  });\n  allmodules.map((m) => {\n    return m_options.push({\n      label: m.M_NAME,\n      value: m.M_ID,\n    });\n  });\n\n  return (\n    <div className={classes[\"body\"]}>\n      <h1>\n        Register your company{\" \"}\n        <i style={{ color: \"#f58634\" }} class=\"fas fa-building\"></i>\n      </h1>\n      <br />\n      <hr />\n      <p className={classes[\"p\"]}>\n        Date{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <div className={classes[\"date\"]}>\n        <DatePicker\n          selected={date}\n          onChange={(date) => setdatemy(date)}\n          scrollableMonthYearDropdown\n          showYearDropdown\n        />\n      </div>\n      <br />\n      <p className={classes[\"p\"]}>\n        Groups{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <MultiSelect onChange={handleOnchange} options={g_options} />\n      <p className={classes[\"p\"]}>\n        Modules{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <MultiSelect onChange={handleOnchange2} options={m_options} />\n      <p className={classes[\"p\"]}>\n        Is Active?{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <select\n        className={classes[\"sel\"]}\n        id=\"cars\"\n        name=\"C_ACTIVE\"\n        onChange={(e) => onChange(e)}\n      >\n        <option className={classes[\"op\"]} value=\"1\">\n          True\n        </option>\n        <option className={classes[\"op\"]} value=\"0\">\n          False\n        </option>\n      </select>\n      <p className={classes[\"p\"]}>\n        C_COUNTRY{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <div className={classes[\"country\"]}>\n        <Select options={options} value={country} onChange={changecountry} />\n      </div>\n\n      {fields.map((it) => {\n        if (\n          it.NAME !== \"C_ACTIVE\" &&\n          it.ISORIGINAL === 1 &&\n          it.NAME != \"C_NOTES\" &&\n          it.NAME !== \"C_CREATED_AT\" &&\n          it.NAME !== \"C_COUNTRY\"\n        ) {\n          return (\n            <Fragment>\n              <p className={classes[\"p\"]}>\n                {it.NAME}\n                {\"  \"}\n                <i\n                  style={{ fontSize: \"8px\", color: \"red\" }}\n                  class=\"fas fa-asterisk\"\n                ></i>\n              </p>\n              <input\n                className={classes[\"input\"]}\n                type=\"text\"\n                name={it.NAME}\n                onChange={(e) => onChange(e)}\n              />\n            </Fragment>\n          );\n        }\n      })}\n      <p className={classes[\"p\"]}>\n        C_NOTES\n        {\"  \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <textarea\n        className={classes[\"input-1\"]}\n        type=\"text\"\n        name=\"C_NOTES\"\n        onChange={(e) => onChange(e)}\n      />\n      <br />\n      <br />\n      <hr />\n      <h2>CUSTOM FIELDS:</h2>\n      <br />\n      {fields.map((it) => {\n        if (it.NAME !== \"C_ACTIVE\" && it.ISORIGINAL === 0) {\n          return (\n            <Fragment>\n              <p className={classes[\"p\"]}>\n                {it.NAME}\n                {\"  \"}\n                <i\n                  style={{ fontSize: \"8px\", color: \"green\" }}\n                  class=\"fas fa-asterisk\"\n                ></i>\n              </p>\n              <input\n                className={classes[\"input\"]}\n                type=\"text\"\n                name={it.NAME}\n                onChange={(e) => onChange(e)}\n              />\n            </Fragment>\n          );\n        }\n      })}\n      {err}\n      <button className={classes[\"submit\"]} onClick={(e) => create(e)}>\n        Create company table <i class=\"fas fa-pen\"></i>\n      </button>\n    </div>\n  );\n};\nCompanyForm.propType = {\n  getgroups: PropTypes.func.isRequired,\n  getfields: PropTypes.func.isRequired,\n  getmodules: PropTypes.func.isRequired,\n  fields: PropTypes.object.isRequired,\n  groups: PropTypes.object.isRequired,\n  module: PropTypes.object.isRequired,\n  getallcompanies: PropTypes.func.isRequired,\n  allcomp: PropTypes.object.isRequired,\n};\nconst mapStatetoProps = (state) => ({\n  groups: state.Group,\n  modules: state.Module,\n  fields: state.Field,\n  allcomp: state.All_Companies.companies,\n});\nexport default connect(mapStatetoProps, {\n  getgroups,\n  getmodules,\n  getfields,\n  getallcompanies,\n})(CompanyForm);\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst editcompany = async (comp) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/company/editcompany\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n    };\n    const c_data = { ...data, ...comp };\n    console.log(c_data, config, endpoint);\n    const res = await axios.post(endpoint, c_data, config);\n    const commp = JSON.stringify(comp);\n    localStorage.removeItem(\"comp\");\n    localStorage.setItem(\"comp\", commp);\n    return true;\n  } catch (error) {\n    console.log(error);\n    return false;\n  }\n};\n\nexport default editcompany;\n","import React, { useState, useEffect, Fragment, useMemo } from \"react\";\nimport classes from \"./EditCompany.module.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport MultiSelect from \"react-multiple-select-dropdown-lite\";\nimport \"react-multiple-select-dropdown-lite/dist/index.css\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\nimport Spinner from \"../../Spinner/Spinner\";\n//import the action files\nimport { getgroups } from \"../../../Actions/Getgroups\";\nimport { getmodules } from \"../../../Actions/GetAllModules\";\nimport { getfields } from \"../../../Actions/Getfields\";\nimport getallcompanies from \"../../../Actions/Company/Getallcompanies\";\n//import from utils\nimport editcompany from \"../../../Utils/EditCompany\";\nimport { useHistory } from \"react-router\";\nconst EditCompany = (props) => {\n  //state for error message\n  const [err, seterr] = useState(\"\");\n  const [prevobj, setprevobj] = useState({});\n  //For country codes\n  const [country, setcountry] = useState(\"\");\n  const options = useMemo(() => countryList().getData(), []);\n\n  const changecountry = (value) => {\n    setcountry(value);\n  };\n  const [date, setdate] = useState(Date.now());\n  const history = useHistory();\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  useEffect(() => {\n    async function fetchall() {\n      await props.getgroups();\n      await props.getmodules();\n      await props.getfields();\n      await props.getallcompanies();\n    }\n    fetchall();\n  }, [err]);\n\n  useEffect(() => {\n    let company;\n    if (\n      props.location.company === undefined ||\n      props.location.company === null\n    ) {\n      company = JSON.parse(localStorage.getItem(\"comp\"));\n    } else {\n      company = props.location.company;\n    }\n    const comparr = Object.entries(company);\n    const newobj = {};\n    for (var i = 0; i < comparr.length; i++) {\n      const keyy = comparr[i][0];\n      let value = comparr[i][1];\n      if (keyy instanceof Array) {\n        continue;\n      }\n      if (keyy == \"C_PERSON\") {\n        continue;\n      }\n      if (value === null || value === undefined) {\n        value = \"null\";\n      }\n      newobj[keyy] = value;\n    }\n    setprevobj(newobj);\n    const nd = new Date(Date.parse(company[\"C_CREATED_AT\"]));\n    setdate(nd);\n    setcountry(JSON.parse(company[\"C_COUNTRY\"]));\n    console.log(newobj);\n  }, []);\n\n  //For groups\n  let value;\n  let isgroupedchanged = false;\n  let def_g = [];\n  let def_m = [];\n  const handleOnchange = (val) => {\n    isgroupedchanged = true;\n    value = val;\n  };\n\n  //For modules\n  let value2;\n  let ismodulechanged = false;\n  const handleOnchange2 = (val) => {\n    ismodulechanged = true;\n    value2 = val;\n  };\n  if (\n    props.groups.isfetched === false ||\n    props.modules.isfetched === false ||\n    props.fields.isfetched === false\n  ) {\n    return (\n      <div>\n        <Spinner />\n      </div>\n    );\n  }\n  //get the groups\n  const allgroups = props.groups.c_groups;\n\n  //get the modules\n  const allmodules = props.modules.c_modules;\n\n  //get the fields\n  const fields = props.fields.c_fields;\n\n  const res = {};\n  fields.map((id) => {\n    return (res[id.NAME] = \"\");\n  });\n  res[\"C_ACTIVE\"] = 1;\n  const onChange = (e) => {\n    setprevobj({ ...prevobj, [e.target.name]: e.target.value });\n  };\n\n  const setdatemy = (date) => {\n    console.log(typeof date);\n    setdate(date);\n  };\n\n  //on form submission\n  const create = async (e) => {\n    if (\n      props.location.company === undefined ||\n      props.location.company === null\n    ) {\n      props.location.company = JSON.parse(localStorage.getItem(\"comp\"));\n    }\n    if (isgroupedchanged === false) {\n      value = props.location.company[\"C_G_ID\"].join();\n    }\n    if (ismodulechanged === false) {\n      value2 = props.location.company[\"C_M_ID\"].join();\n    }\n    const res = { ...prevobj };\n\n    res[\"C_COUNTRY\"] = JSON.stringify(country);\n    if (value != undefined && value != null && value.length != 0) {\n      res[\"C_G_ID\"] = value.split(\",\");\n    } else {\n      res[\"C_G_ID\"] = [];\n    }\n    if (value2 != undefined && value2 != null && value2.length != 0) {\n      res[\"C_M_ID\"] = value2.split(\",\");\n    } else {\n      res[\"C_M_ID\"] = [];\n    }\n    res[\"C_CREATED_AT\"] = date.toString();\n    var flag = 0;\n    props.allcomp.map((c) => {\n      if (res[\"C_NAME\"] == c.C_NAME) {\n        if (c.C_ID != res[\"C_ID\"]) {\n          flag = 1;\n        }\n      }\n    });\n    console.log(res);\n    if (flag === 1 || res[\"C_NAME\"].length == 0) {\n      seterr(\n        <p style={{ color: \"red\" }}>\n          Cannot set/modify company.Either there exists a company with this name\n          or there is\n          <br /> some error!\n        </p>\n      );\n      setTimeout(() => {\n        seterr(\"\");\n      }, 2000);\n      return;\n    }\n    const rres = await editcompany(res);\n    if (rres == false) {\n      seterr(\n        <p style={{ color: \"red\" }}>\n          Cannot set/modify company.Either there exists a company with this name\n          or there is\n          <br /> some error!\n        </p>\n      );\n    } else {\n      seterr(<p style={{ color: \"green\" }}>Company updated successfully!</p>);\n    }\n    setTimeout(() => {\n      seterr(\"\");\n    }, 2000);\n  };\n\n  //Create the group array for dropdown\n  const g_options = [];\n  const m_options = [];\n  let prev_g;\n  let prev_m;\n  if (props.location.company != null && props.location.company != undefined) {\n    prev_g = props.location.company[\"C_G_ID\"];\n    prev_m = props.location.company[\"C_M_ID\"];\n  } else {\n    let company = JSON.parse(localStorage.getItem(\"comp\"));\n    prev_g = company[\"C_G_ID\"];\n    prev_m = company[\"C_M_ID\"];\n  }\n\n  //set default value of groups\n  for (var i = 0; i < prev_g.length; i++) {\n    let id = prev_g[i];\n    allgroups.map((g) => {\n      if (g.G_ID === id) {\n        return def_g.push({\n          label: g.G_NAME,\n          value: g.G_ID,\n        });\n      }\n    });\n  }\n  //set default value of modules\n  for (var i = 0; i < prev_m.length; i++) {\n    let id = prev_m[i];\n    allmodules.map((g) => {\n      if (g.M_ID === id) {\n        return def_m.push({\n          label: g.M_NAME,\n          value: g.M_ID,\n        });\n      }\n    });\n  }\n  allgroups.map((g) => {\n    return g_options.push({\n      label: g.G_NAME,\n      value: g.G_ID,\n    });\n  });\n  allmodules.map((m) => {\n    return m_options.push({\n      label: m.M_NAME,\n      value: m.M_ID,\n    });\n  });\n\n  return (\n    <div className={classes[\"body\"]}>\n      <h1>\n        Modify {prevobj[\"C_NAME\"]}{\" \"}\n        <i style={{ color: \"#f58634\" }} class=\"fas fa-building\"></i>\n      </h1>\n      <br />\n      <p style={{ color: \"red\" }}>\n        Edit the groups and modules at the end!\n      </p>\n      <hr />\n      <p className={classes[\"p\"]}>\n        Date{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <div className={classes[\"date\"]}>\n        <DatePicker\n          selected={date}\n          onChange={(date) => setdatemy(date)}\n          scrollableMonthYearDropdown\n          showYearDropdown\n        />\n      </div>\n      <br />\n      <p style={{ color: \"red\" }}>\n        <i\n          style={{ fontSize: \"8px\", color: \"red\", marginRight: \"5px\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n        Groups and modules if not changed will be set to previous values!\n        <br />\n        If you select any new field, previously set values will be lost!\n        <br />\n        If you select no fields after modifying, previous data will be lost!\n      </p>\n      <p className={classes[\"p\"]}>\n        Groups{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n\n      <MultiSelect onChange={handleOnchange} options={g_options} />\n      <p className={classes[\"p\"]}>\n        Modules{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <MultiSelect onChange={handleOnchange2} options={m_options} />\n      <p className={classes[\"p\"]}>\n        Is Active?{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <p style={{ color: \"red\" }}>\n        <i\n          style={{ fontSize: \"8px\", color: \"red\", marginRight: \"5px\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n        If not changed will be considered as default!\n      </p>\n      <select\n        className={classes[\"sel\"]}\n        name=\"C_ACTIVE\"\n        onChange={(e) => onChange(e)}\n      >\n        <option className={classes[\"op\"]} value=\"1\">\n          Select\n        </option>\n        <option className={classes[\"op\"]} value=\"1\">\n          True\n        </option>\n        <option className={classes[\"op\"]} value=\"0\">\n          False\n        </option>\n      </select>\n      <p className={classes[\"p\"]}>\n        C_COUNTRY{\" \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <div className={classes[\"country\"]}>\n        <Select options={options} value={country} onChange={changecountry} />\n      </div>\n\n      {fields.map((it) => {\n        if (\n          it.NAME !== \"C_ACTIVE\" &&\n          it.ISORIGINAL === 1 &&\n          it.NAME !== \"C_NOTES\" &&\n          it.NAME !== \"C_CREATED_AT\" &&\n          it.NAME !== \"C_COUNTRY\"\n        ) {\n          return (\n            <Fragment key={it.NAME}>\n              <p className={classes[\"p\"]}>\n                {it.NAME}\n                {\"  \"}\n                <i\n                  style={{ fontSize: \"8px\", color: \"red\" }}\n                  class=\"fas fa-asterisk\"\n                ></i>\n              </p>\n              <input\n                value={prevobj[it.NAME]}\n                className={classes[\"input\"]}\n                type=\"text\"\n                name={it.NAME}\n                onChange={(e) => onChange(e)}\n              />\n            </Fragment>\n          );\n        }\n      })}\n      <p className={classes[\"p\"]}>\n        C_NOTES\n        {\"  \"}\n        <i\n          style={{ fontSize: \"8px\", color: \"red\" }}\n          class=\"fas fa-asterisk\"\n        ></i>\n      </p>\n      <textarea\n        style={{ fontSize: \"1.3rem\" }}\n        className={classes[\"input-1\"]}\n        type=\"text\"\n        name=\"C_NOTES\"\n        value={prevobj[\"C_NOTES\"]}\n        onChange={(e) => onChange(e)}\n      />\n      <br />\n      <br />\n      <hr />\n      <h2>CUSTOM FIELDS:</h2>\n      <br />\n      {fields.map((it) => {\n        if (it.NAME !== \"C_ACTIVE\" && it.ISORIGINAL === 0) {\n          return (\n            <Fragment>\n              <p className={classes[\"p\"]}>\n                {it.NAME}\n                {\"  \"}\n                <i\n                  style={{ fontSize: \"8px\", color: \"green\" }}\n                  class=\"fas fa-asterisk\"\n                ></i>\n              </p>\n              <input\n                value={prevobj[it.NAME]}\n                className={classes[\"input\"]}\n                type=\"text\"\n                name={it.NAME}\n                onChange={(e) => onChange(e)}\n              />\n            </Fragment>\n          );\n        }\n      })}\n      {err}\n      <button\n        className={classes[\"submit\"]}\n        onClick={(e) => create(e)}\n        style={{ cursor: \"pointer\" }}\n      >\n        Update company table <i class=\"fas fa-pen\"></i>\n      </button>\n    </div>\n  );\n};\nEditCompany.propType = {\n  getgroups: PropTypes.func.isRequired,\n  getfields: PropTypes.func.isRequired,\n  getmodules: PropTypes.func.isRequired,\n  fields: PropTypes.object.isRequired,\n  groups: PropTypes.object.isRequired,\n  module: PropTypes.object.isRequired,\n  getallcompanies: PropTypes.func.isRequired,\n  allcomp: PropTypes.object.isRequired,\n};\nconst mapStatetoProps = (state) => ({\n  groups: state.Group,\n  modules: state.Module,\n  fields: state.Field,\n  allcomp: state.All_Companies.companies,\n});\nexport default connect(mapStatetoProps, {\n  getgroups,\n  getmodules,\n  getfields,\n  getallcompanies,\n})(EditCompany);\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst getperson = async (C_ID) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/person/getallperson\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      C_ID,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return res.data.rows;\n  } catch (error) {\n    return [];\n    console.log(error);\n  }\n};\n\nexport default getperson;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst deleteperson = async (p_id) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/person/deleteperson\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      p_id,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default deleteperson;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst editperson = async (obj) => {\n  try {\n    if (obj[\"NAME\"].length == 0) {\n      return false;\n    }\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/person/editperson\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      ...obj,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nexport default editperson;\n","import React, { useState } from \"react\";\nimport classes from \"./Personedit.module.css\";\nimport editperson from \"../../../../../../Utils/Editperson\";\nconst Personedit = (props) => {\n  const [msg, setmsg] = useState(\"\");\n  const toggler = props.toggler;\n  const [res, setres] = useState({\n    C_ID: props.person[\"C_ID\"],\n    p_id: props.person[\"ID\"],\n    NAME: props.person[\"NAME\"],\n    EMAIL: props.person[\"EMAIL\"],\n    MOBILE: props.person[\"MOBILE\"],\n    DESIGNATION: props.person[\"DESIGNATION\"],\n  });\n  const onSubmit = async (e) => {\n    const resp = await editperson(res);\n    if (resp === false) {\n      setmsg(\"Please enter a valid name!\");\n      setInterval(() => {\n        setmsg(\"\");\n      }, 2000);\n    } else {\n      toggler();\n    }\n  };\n  const onchange = (e) => {\n    setres({ ...res, [e.target.name]: e.target.value });\n  };\n  return (\n    <div className={classes[\"body\"]}>\n      <div className={classes[\"form\"]}>\n        <input\n          value={res.NAME}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"Name\"\n          name=\"NAME\"\n        />\n        <input\n          value={res.EMAIL}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"Email\"\n          name=\"EMAIL\"\n        />\n        <input\n          value={res.MOBILE}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"Phone\"\n          name=\"MOBILE\"\n        />\n        <input\n          value={res.DESIGNATION}\n          onChange={(e) => onchange(e)}\n          className={classes[\"input\"]}\n          type=\"text\"\n          placeholder=\"Designation\"\n          name=\"DESIGNATION\"\n        />\n        <button onClick={(e) => onSubmit(e)} className={classes[\"btn\"]}>\n          <i class=\"fas fa-pen\"></i> Update\n        </button>\n        <button onClick={(e) => toggler(e)} className={classes[\"btn-2\"]}>\n          <i class=\"fas fa-times-circle\"></i>\n        </button>\n        <p style={{ color: \"red\" }}>{msg}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Personedit;\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport classes from \"./Showpersonlist.module.css\";\n\n//Import fetch function from utils\nimport getallperson from \"../../../../../Utils/Getallperson\";\nimport deleteperson from \"../../../../../Utils/Deleteperson\";\nimport DeletePopup from \"../../../../DeletePop/DeletePopup\";\n\n//Import edit popup\nimport Personedit from \"./Personedit/Personedit\";\nimport { useHistory } from \"react-router\";\nconst Showpersonlist = () => {\n  let comp = JSON.parse(localStorage.getItem(\"comp\"));\n  const [person, setperson] = useState([]);\n  const [toggler, settoggler] = useState(false);\n  const [toggler2, settoggler2] = useState(false);\n  const history = useHistory();\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  useEffect(() => {\n    async function getperson() {\n      const persons = await getallperson(comp[\"C_ID\"]);\n      setperson(persons);\n    }\n    getperson();\n  }, [toggler, toggler2]);\n  /*------------------------Toggler 1--------------------- */\n\n  const [id, setid] = useState();\n  const toggle = () => {\n    if (toggler == false) {\n      settoggler(true);\n    } else {\n      settoggler(false);\n    }\n  };\n  const close = () => {\n    settoggler(false);\n  };\n  const setidtodelete = (e, id) => {\n    console.log(id);\n    setid(id);\n    toggle();\n  };\n  /*------------------------Toggler 1--------------------- */\n\n  const [obj, setobj] = useState();\n  const toggle2 = () => {\n    if (toggler2 == false) {\n      settoggler2(true);\n    } else {\n      settoggler2(false);\n    }\n  };\n  const close2 = () => {\n    settoggler2(false);\n  };\n  const setobjedit = (e, obj) => {\n    setobj(obj);\n    toggle2();\n  };\n  const p_fields = person;\n  return (\n    <div className={classes[\"body\"]}>\n      {toggler == true ? (\n        <DeletePopup p_value={id} toggler={close} mainfunc={deleteperson} />\n      ) : (\n        <Fragment></Fragment>\n      )}\n      {toggler2 == true ? (\n        <Personedit person={obj} toggler={close2} />\n      ) : (\n        <Fragment></Fragment>\n      )}\n      <h1 className={classes[\"h1\"]}>People registered in {comp[\"C_NAME\"]}</h1>\n      <br />\n      <hr />\n      <br />\n      <table className={classes[\"table\"]}>\n        <tr>\n          <th className={classes[\"th\"]}>P_ID</th>\n          <th className={classes[\"th\"]}>P_NAME</th>\n          <th className={classes[\"th\"]}>P_DESIGNATION</th>\n          <th className={classes[\"th\"]}>P_PHONE</th>\n          <th className={classes[\"th\"]}>P_EMAIL</th>\n          <th className={classes[\"th\"]}></th>\n          <th className={classes[\"th\"]}></th>\n        </tr>\n        {p_fields.map((item) => {\n          return (\n            <tr className={classes[\"tr\"]}>\n              <td className={classes[\"td\"]}>{item[\"ID\"]}</td>\n              <td className={classes[\"td\"]}>{item[\"NAME\"]}</td>\n              <td className={classes[\"td\"]}>{item[\"DESIGNATION\"]}</td>\n              <td className={classes[\"td\"]}>{item[\"MOBILE\"]}</td>\n              <td className={classes[\"td\"]}>{item[\"EMAIL\"]}</td>\n              <td className={classes[\"td\"]}>\n                <i\n                  onClick={(e) => setobjedit(e, item)}\n                  style={{ color: \"green\" }}\n                  class=\"fas fa-pen\"\n                ></i>\n              </td>\n              <td className={classes[\"td\"]}>\n                <i\n                  onClick={(e) => setidtodelete(e, item[\"ID\"])}\n                  style={{ color: \"red\" }}\n                  class=\"fas fa-trash-alt\"\n                ></i>\n              </td>\n            </tr>\n          );\n        })}\n      </table>\n      <hr />\n    </div>\n  );\n};\n\nexport default Showpersonlist;\n","import axios from \"axios\";\nimport host from \"../host\";\nimport { email, password } from \"../auth\";\nconst getgroupedcompanies = async (g_string) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    //Endpoint\n    const endpoint = host + \"/api/v1/query/groups\";\n    const data = {\n      email: email || localStorage.getItem(\"email\"),\n      password: password || localStorage.getItem(\"password\"),\n      g_string,\n    };\n    const res = await axios.post(endpoint, data, config);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nexport default getgroupedcompanies;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classes from \"./Groupsearch.module.css\";\nimport MultiSelect from \"react-multiple-select-dropdown-lite\";\nimport \"react-multiple-select-dropdown-lite/dist/index.css\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\n\nimport getgroupedcompanies from \"../../../Utils/Getgroupedcompanies\";\nimport { useHistory } from \"react-router\";\n\nconst Groupsearch = (props) => {\n  const history = useHistory();\n  const [msg, setmsg] = useState(\"\");\n  const [fields, setfields] = useState({});\n  const [groups, setgroups] = useState({});\n  const [options, setoption] = useState({});\n  const [showfield, setshowfield] = useState([]);\n  const [val, setval] = useState();\n  const [companies, setcompanies] = useState([]);\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  useEffect(() => {\n    const fields = JSON.parse(localStorage.getItem(\"allfields\"));\n    const obj = {};\n    fields.map((f) => {\n      obj[f.NAME] = false;\n    });\n    setfields(obj);\n    const groups = JSON.parse(localStorage.getItem(\"allgroups\"));\n    const options = [];\n    groups.map((g) => {\n      options.push({\n        label: g.G_NAME,\n        value: g.G_ID,\n      });\n    });\n    setoption(options);\n  }, []);\n\n  //Function to select in checkbox\n  const select = (e) => {\n    const res = fields[e.target.name];\n    let ans;\n    if (res) {\n      ans = false;\n    } else {\n      ans = true;\n    }\n    setfields({ ...fields, [e.target.name]: ans });\n  };\n\n  //Function to submit\n  const onsubmit = async (e) => {\n    const ff = JSON.parse(localStorage.getItem(\"allfields\"));\n    const arr = [];\n    let flag = false;\n    ff.map((f) => {\n      const name = f.NAME;\n      if (fields[name]) {\n        flag = true;\n        arr.push(name);\n      }\n    });\n    setshowfield(arr);\n    if (flag === false || val == undefined || val.length === 0) {\n      setmsg(\n        <p style={{ color: \"red\" }}>\n          Please select atleast one group/one field!\n        </p>\n      );\n      setTimeout(() => {\n        setmsg(\"\");\n      }, 2000);\n      return;\n    }\n    let ress = await getgroupedcompanies(val);\n    ress = ress.C_ID;\n    const allcompanies = JSON.parse(localStorage.getItem(\"allcompany\"));\n    const showcomp = [];\n    ress.map((cid) => {\n      console.log(cid);\n      allcompanies.map((c) => {\n        if (cid == c.C_ID) {\n          showcomp.push(c);\n        }\n      });\n    });\n    console.log(showcomp);\n    setcompanies(showcomp);\n  };\n\n  //Set group query\n  const setgroupquery = (val) => {\n    setval(val);\n  };\n  return (\n    <Fragment>\n      <div className={classes[\"body\"]}>\n        <div className={classes[\"head\"]}>\n          <h1 style={{ color: \"grey\" }}>Search/Import based on groups</h1>\n        </div>\n        <br />\n        <hr style={{ width: \"80%\" }} />\n        <br />\n        <div className={classes[\"head\"]}>\n          <h3>Select Groups</h3>\n        </div>\n        <MultiSelect\n          placeholder=\"Select groups\"\n          options={options}\n          onChange={(val) => {\n            setgroupquery(val);\n          }}\n          style={{ width: \"80%\", margin: \"auto\" }}\n          option={options}\n        />\n        <br />\n        <div className={classes[\"head\"]}>\n          <h3>Select Fields</h3>\n        </div>\n        <div className={classes[\"flex\"]}>\n          {JSON.parse(localStorage.getItem(\"allfields\")).map((f) => {\n            return (\n              <div className={classes[\"item\"]}>\n                <label className={classes[\"label\"]}>{f.NAME}</label>\n                <input\n                  className={classes[\"round\"]}\n                  type=\"checkbox\"\n                  name={f.NAME}\n                  onChange={(e) => select(e)}\n                />\n              </div>\n            );\n          })}\n        </div>\n\n        <div className={classes[\"head\"]}>\n          {msg}\n          <button className={classes[\"btn\"]} onClick={(e) => onsubmit(e)}>\n            Search <i class=\"fas fa-search\"></i>\n          </button>\n          <ReactHTMLTableToExcel\n            className={classes[\"btn-1\"]}\n            table=\"custom_search_table\"\n            filename=\"companies\"\n            sheet=\"xls\"\n            buttonText=\"Export Exel\"\n          />\n        </div>\n\n        <div className={classes[\"head-1\"]}>\n          <h2 className={classes[\"center\"]}>Search Results</h2>\n          <table className={classes[\"table\"]} id=\"custom_search_table\">\n            <tr className={classes[\"tr-1\"]}>\n              {showfield.map((item) => {\n                return <th className={classes[\"th\"]}>{item}</th>;\n              })}\n            </tr>\n            {companies.map((c) => {\n              return (\n                <tr>\n                  {showfield.map((fname) => {\n                    if (fname == \"C_COUNTRY\") {\n                      const ans = JSON.parse(c[fname]);\n                      const ret = ans[\"label\"];\n                      return <td className={classes[\"td\"]}>{ret}</td>;\n                    } else if (c[fname] === null) {\n                      return <td className={classes[\"td\"]}>null</td>;\n                    }\n                    return <td className={classes[\"td\"]}>{c[fname]}</td>;\n                  })}\n                </tr>\n              );\n            })}\n          </table>\n        </div>\n        <br />\n        <br />\n      </div>\n    </Fragment>\n  );\n};\n\nGroupsearch.propTypes = {\n  fields: PropTypes.object.isRequired,\n  companies: PropTypes.object.isRequired,\n  groups: PropTypes.object.isRequired,\n  getfields: PropTypes.func.isRequired,\n  getgroups: PropTypes.func.isRequired,\n  getallcompanies: PropTypes.func.isRequired,\n};\n\nexport default Groupsearch;\n","const dbpass = \"root\";\nexport default dbpass;\n","import React, { useState } from \"react\";\nimport classes from \"./Backup.module.css\";\nimport dbpass from \"../../dbpass\";\nimport host from \"../../host\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nconst Backup = () => {\n  const [pass, setpass] = useState();\n  const [msg, setmsg] = useState();\n  const onsubmit = async (e) => {\n    try {\n      const endpoint = host + \"/api/v1/backup\";\n      const data = { password: pass };\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      if (pass === undefined || pass.length == 0 || pass != dbpass) {\n        setmsg(<p style={{ color: \"red\" }}>Error in creating backup</p>);\n        setTimeout(() => {\n          setmsg(\"\");\n        }, 2000);\n        return;\n      }\n      const res = await axios.post(endpoint, data, config);\n      setmsg(<p style={{ color: \"green\" }}>Backup successfull</p>);\n      setTimeout(() => {\n        setmsg(\"\");\n      }, 2000);\n      return;\n    } catch (error) {\n      setmsg(<p style={{ color: \"red\" }}>Error in creating backup</p>);\n      setTimeout(() => {\n        setmsg(\"\");\n      }, 2000);\n      return;\n    }\n  };\n  const onsubmit2 = async (e) => {\n    try {\n      const endpoint = host + \"/api/v1/restore\";\n      const data = { password: pass };\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      if (pass === undefined || pass.length == 0 || pass != dbpass) {\n        setmsg(<p style={{ color: \"red\" }}>Error in restoration!</p>);\n        setTimeout(() => {\n          setmsg(\"\");\n        }, 2000);\n        return;\n      }\n      const res = await axios.post(endpoint, data, config);\n      console.log(res);\n      setmsg(<p style={{ color: \"green\" }}>Restore successfull</p>);\n      setTimeout(() => {\n        setmsg(\"\");\n      }, 2000);\n      return;\n    } catch (error) {\n      console.log(error);\n      setmsg(<p style={{ color: \"red\" }}>Error in restoration!</p>);\n      setTimeout(() => {\n        setmsg(\"\");\n      }, 2000);\n      return;\n    }\n  };\n  const history = useHistory();\n  const authemail = localStorage.getItem(\"email\");\n  const authpass = localStorage.getItem(\"password\");\n  if (authemail === null || authpass === null) {\n    history.push(\"/\");\n  }\n  return (\n    <div className={classes[\"body\"]}>\n      <div className={classes[\"head\"]}>\n        <h1>\n          Backup and Restore your data{\" \"}\n          <i style={{ color: \"#f58634\" }} class=\"fas fa-window-restore\"></i>\n        </h1>\n\n        <br />\n        <hr />\n        <br />\n        <br />\n        <div className={classes[\"head\"]}>{msg}</div>\n\n        <div className={classes[\"head\"]}>\n          <input\n            className={classes[\"input\"]}\n            type=\"password\"\n            placeholder=\"Enter password\"\n            value={pass}\n            onChange={(e) => {\n              setpass(e.target.value);\n            }}\n          />\n        </div>\n        <div className={classes[\"head-1\"]}>\n          <button\n            className={classes[\"btn\"]}\n            onClick={(e) => {\n              onsubmit(e);\n            }}\n          >\n            Backup your data\n          </button>\n          <button\n            className={classes[\"btn\"]}\n            onClick={(e) => {\n              onsubmit2(e);\n            }}\n          >\n            Restore your data\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Backup;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport classes from \"./Navbar.module.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nconst Navbar = () => {\n  const history = useHistory();\n\n  const [toggleOn, setToggleOn] = useState(true);\n  const toggleIcon = () => {\n    if (toggleOn === true) {\n      setToggleOn(false);\n    } else {\n      setToggleOn(true);\n    }\n  };\n  const logout = (e) => {\n    localStorage.removeItem(\"email\");\n    localStorage.removeItem(\"password\");\n    localStorage.removeItem(\"comp\");\n    history.push(\"/\");\n  };\n  return (\n    <>\n      <div className={classes.Navbar}>\n        <div className={classes.title}>Company Book</div>\n        <ul className={toggleOn ? classes.navLinks : classes.navLinksActive}>\n          <li>\n            <Link to=\"/companies\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/createcompany\">Add company</Link>\n          </li>\n          <li>\n            <Link to=\"/custom_fields\">Fields</Link>\n          </li>\n          <li>\n            <Link to=\"/groups\">Groups</Link>\n          </li>\n          <li>\n            <Link to=\"/modules\">Modules</Link>\n          </li>\n          <li>\n            <Link to=\"/backupandrestore\">Backup/Restore</Link>\n          </li>\n          <li\n            style={{ cursor: \"pointer\", color: \"white\" }}\n            onClick={(e) => logout(e)}\n          >\n            Logout\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React, { Fragment } from \"react\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./Store\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\n//Import the components\nimport Home from \"./Components/Home/Home\";\nimport Field from \"./Components/Field/Field\";\nimport Group from \"./Components/Groups/Groups\";\nimport Module from \"./Components/Module/Module\";\nimport ShowCompany from \"./Components/Company/ShowCompany\";\nimport ShowPComp from \"./Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPComp\";\nimport CompanyForm from \"./Components/Company/CompanyForm/CompanyForm\";\nimport EditCompany from \"./Components/Company/EditCompany/EditCompany\";\nimport Showpersonlist from \"./Components/Company/ShowAllCompanies/ShowParticularCompany/ShowPersonList/Showpersonlist\";\nimport Groupsearch from \"./Components/Company/Groupsearch/Groupsearch\";\nimport Backup from \"./Components/Backup/Backup\";\nimport Navbar from \"./Components/Navbar/Navbar\";\n\nconst App = () => {\n  return (\n    <Provider store={Store}>\n      <BrowserRouter>\n        <Fragment>\n          <Navbar />\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/custom_fields\" component={Field} />\n          <Route exact path=\"/modules\" component={Module} />\n          <Route exact path=\"/groups\" component={Group} />\n          <Route exact path=\"/companies\" component={ShowCompany} />\n          <Route exact path=\"/groupsearch\" component={Groupsearch} />\n          <Route exact path=\"/backupandrestore\" component={Backup} />\n          <Route\n            exact\n            path=\"/particularcompany\"\n            render={(props) => <ShowPComp {...props} />}\n          />\n          <Route\n            exact\n            path=\"/editcompany\"\n            render={(props) => <EditCompany {...props} />}\n          />\n          <Route exact path=\"/createcompany\" component={CompanyForm} />\n          <Route exact path=\"/company/personlist\" component={Showpersonlist} />\n        </Fragment>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Personedit_body__15qKb\",\"form\":\"Personedit_form__17Kxr\",\"btn\":\"Personedit_btn__1dD0Z\",\"btn-2\":\"Personedit_btn-2__1tsRf\",\"input\":\"Personedit_input__2hEm5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Backup_body__N3ijg\",\"head\":\"Backup_head__1AHVZ\",\"head-1\":\"Backup_head-1__1XV3Q\",\"btn\":\"Backup_btn__1ENp7\",\"input\":\"Backup_input__24z9H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__dGToO\",\"loginMessage\":\"Login_loginMessage__QQ9Cd\",\"innerLogin\":\"Login_innerLogin__3vIZy\",\"icon\":\"Login_icon__3QRQi\",\"LoginButton\":\"Login_LoginButton__3TPL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup\":\"Signup_signup__cx23t\",\"signupMessage\":\"Signup_signupMessage__3c_lE\",\"innerSignup\":\"Signup_innerSignup__1SOxc\",\"icon\":\"Signup_icon__2YVLW\",\"SignupButton\":\"Signup_SignupButton__19SxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__30P3A\",\"heading\":\"Home_heading__39wGv\",\"welmsg\":\"Home_welmsg__1b7_j\",\"forms\":\"Home_forms__UtAv-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"DeletePopup_body__39uPV\",\"btn-div\":\"DeletePopup_btn-div__3_PFh\",\"succ\":\"DeletePopup_succ__AesW6\",\"fail\":\"DeletePopup_fail__2JM0U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Company_table__25kzh\",\"th\":\"Company_th__11D0b\",\"td\":\"Company_td__3OsSK\",\"resp\":\"Company_resp__1oAxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__2hRdE\",\"title\":\"Navbar_title__3NpoK\",\"navLinks\":\"Navbar_navLinks__2rD5-\",\"toggler\":\"Navbar_toggler__vVRpi\",\"navLinksActive\":\"Navbar_navLinksActive__b86TA\"};"],"sourceRoot":""}